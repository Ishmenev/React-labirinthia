{"ast":null,"code":"var _jsxFileName = \"/Users/ishmenevev/Desktop/CopyLab/labirinthia-master/src/components/UI/Input/Input.js\";\nimport React, { Component } from 'react';\nimport styles from './Input.module.scss';\nexport default class Input extends Component {\n  constructor(props) {\n    super(props);\n\n    this.updateData = () => {\n      this.setState({\n        updateStatus: true\n      });\n      console.log(this.state.newUser.updateStatus);\n    };\n\n    this.state = {\n      newUser: {\n        email: '',\n        username: '',\n        errorStatus: '',\n        updateStatus: false\n      }\n    };\n    this.handleChange = this.handleChange.bind(this); // this.emailFilled = this.emailFilled.bind(this);\n\n    this.checkError = this.checkError.bind(this);\n    this.updateData = this.updateData.bind(this);\n  }\n\n  handleChange(event) {\n    this.setState({\n      value: event.target.value\n    });\n  } // emailFilled(e) {\n  //   let value = e.target.value;\n  //   this.setState( prevState => ({ newUser : \n  //       {...prevState.newUser, email: value\n  //       }\n  //     }))\n  // }\n  // checkError() {\n  //   let fullField = this.state.newUser.email;\n  //   let errorStatus = '';\n  //   if (fullField.match(/^([\\w.%+-]+)@([\\w-]+\\.)+([\\w]{2,})$/i)) {\n  //     errorStatus = 'valid'\n  //   } else {\n  //     errorStatus = 'invalid'\n  //   }\n  //   console.log(errorStatus)\n  // }\n\n\n  render() {\n    const format = this.props.format;\n    let content = null;\n\n    if (format === 'text') {\n      content = React.createElement(\"input\", Object.assign({\n        type: \"text\",\n        className: styles.feedback__input,\n        value: this.state.username,\n        onChange: this.handleChange\n      }, this.props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }));\n    } else if (format === 'email') {\n      content = React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        onClick: this.updateData,\n        type: \"button\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, \"test\"), React.createElement(\"input\", Object.assign({\n        type: \"text\",\n        className: styles.feedback__input,\n        value: this.state.email // onChange={this.emailFilled}\n\n      }, this.props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      })));\n    }\n\n    return content;\n  }\n\n}","map":{"version":3,"sources":["/Users/ishmenevev/Desktop/CopyLab/labirinthia-master/src/components/UI/Input/Input.js"],"names":["React","Component","styles","Input","constructor","props","updateData","setState","updateStatus","console","log","state","newUser","email","username","errorStatus","handleChange","bind","checkError","event","value","target","render","format","content","feedback__input"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AAGA,eAAe,MAAMC,KAAN,SAAoBF,SAApB,CAA8B;AAC3CG,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SA2CnBC,UA3CmB,GA2CN,MAAM;AACjB,WAAKC,QAAL,CAAc;AAACC,QAAAA,YAAY,EAAE;AAAf,OAAd;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKC,KAAL,CAAWC,OAAX,CAAmBJ,YAA/B;AACD,KA9CkB;;AAEjB,SAAKG,KAAL,GAAa;AACXC,MAAAA,OAAO,EAAE;AACPC,QAAAA,KAAK,EAAE,EADA;AAEPC,QAAAA,QAAQ,EAAE,EAFH;AAGPC,QAAAA,WAAW,EAAE,EAHN;AAIPP,QAAAA,YAAY,EAAE;AAJP;AADE,KAAb;AASA,SAAKQ,YAAL,GAAoB,KAAKA,YAAL,CAAkBC,IAAlB,CAAuB,IAAvB,CAApB,CAXiB,CAYjB;;AACA,SAAKC,UAAL,GAAkB,KAAKA,UAAL,CAAgBD,IAAhB,CAAqB,IAArB,CAAlB;AAEA,SAAKX,UAAL,GAAkB,KAAKA,UAAL,CAAgBW,IAAhB,CAAqB,IAArB,CAAlB;AAED;;AAGDD,EAAAA,YAAY,CAACG,KAAD,EAAQ;AAClB,SAAKZ,QAAL,CAAc;AAACa,MAAAA,KAAK,EAAED,KAAK,CAACE,MAAN,CAAaD;AAArB,KAAd;AACD,GAvB0C,CAyB3C;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAQAE,EAAAA,MAAM,GAAG;AAAA,UACAC,MADA,GACU,KAAKlB,KADf,CACAkB,MADA;AAEP,QAAIC,OAAO,GAAG,IAAd;;AAEA,QAAID,MAAM,KAAK,MAAf,EAAuB;AACrBC,MAAAA,OAAO,GAAG;AAAO,QAAA,IAAI,EAAC,MAAZ;AACQ,QAAA,SAAS,EAAEtB,MAAM,CAACuB,eAD1B;AAEQ,QAAA,KAAK,EAAE,KAAKd,KAAL,CAAWG,QAF1B;AAGQ,QAAA,QAAQ,EAAE,KAAKE;AAHvB,SAIY,KAAKX,KAJjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAV;AAKD,KAND,MAQK,IAAIkB,MAAM,KAAK,OAAf,EAAwB;AAC3BC,MAAAA,OAAO,GACL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAQ,QAAA,OAAO,EAAE,KAAKlB,UAAtB;AAAkC,QAAA,IAAI,EAAC,QAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,EAEE;AAAO,QAAA,IAAI,EAAC,MAAZ;AACA,QAAA,SAAS,EAAEJ,MAAM,CAACuB,eADlB;AAEA,QAAA,KAAK,EAAE,KAAKd,KAAL,CAAWE,KAFlB,CAGA;;AAHA,SAII,KAAKR,KAJT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAFF,CADF;AASD;;AAED,WACEmB,OADF;AAGD;;AA7E0C","sourcesContent":["import React, { Component } from 'react';\nimport styles from './Input.module.scss';\n\n\nexport default class Input extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      newUser: {\n        email: '',\n        username: '',\n        errorStatus: '',\n        updateStatus: false\n      }\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n    // this.emailFilled = this.emailFilled.bind(this);\n    this.checkError = this.checkError.bind(this);\n\n    this.updateData = this.updateData.bind(this);\n\n  }\n\n\n  handleChange(event) {\n    this.setState({value: event.target.value});\n  }\n\n  // emailFilled(e) {\n  //   let value = e.target.value;\n  //   this.setState( prevState => ({ newUser : \n  //       {...prevState.newUser, email: value\n  //       }\n  //     }))\n  // }\n\n  // checkError() {\n  //   let fullField = this.state.newUser.email;\n  //   let errorStatus = '';\n  //   if (fullField.match(/^([\\w.%+-]+)@([\\w-]+\\.)+([\\w]{2,})$/i)) {\n  //     errorStatus = 'valid'\n  //   } else {\n  //     errorStatus = 'invalid'\n  //   }\n  //   console.log(errorStatus)\n  // }\n\n  updateData = () => {\n    this.setState({updateStatus: true})\n    console.log(this.state.newUser.updateStatus)\n  }\n\n\n  render() {\n    const {format} = this.props;\n    let content = null;\n\n    if (format === 'text') {\n      content = <input type='text' \n                        className={styles.feedback__input}\n                        value={this.state.username}\n                        onChange={this.handleChange}\n                        {...this.props}></input>\n    } \n\n    else if (format === 'email') {\n      content = \n        <div>\n          <button onClick={this.updateData} type='button'>test</button>\n          <input type='text'\n          className={styles.feedback__input}\n          value={this.state.email}\n          // onChange={this.emailFilled}\n          {...this.props}></input>\n        </div>\n    }\n\n    return(\n      content\n    ) \n  }\n}\n"]},"metadata":{},"sourceType":"module"}