{"ast":null,"code":"var _jsxFileName = \"/Users/ishmenevev/Desktop/CopyLab/experience/src/components/UI/Input/withInput.js\";\nimport React, { Component } from 'react';\n\nconst withInput = Wrapper => {\n  var _temp;\n\n  return _temp = class extends Component {\n    constructor(props) {\n      super(props);\n\n      this.pushSubmit = e => {\n        e.preventDefault();\n        this.setState({\n          formValid: validateForm(this.state.errors)\n        });\n        this.setState({\n          errorCount: countErrors(this.state.errors)\n        });\n      };\n\n      this.validateForm = errors => {\n        let valid = true;\n        Object.values(errors).forEach(val => val.length > 0 && (valid = false));\n        return valid;\n      };\n\n      this.countErrors = errors => {\n        let count = 0;\n        Object.values(errors).forEach(val => val.length > 0 && (count = count + 1));\n        return count;\n      };\n\n      this.state = {\n        formValid: false,\n        errorCount: null,\n        errors: {\n          firstName: '',\n          lastName: '',\n          email: ''\n        }\n      };\n    }\n\n    render() {\n      return React.createElement(Wrapper, Object.assign({}, this.props, {\n        inputChange: this.inputChange,\n        pushSubmit: this.pushSubmit,\n        value: this.state.value,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }));\n    }\n\n  }, _temp;\n};\n\nexport default withInput;","map":{"version":3,"sources":["/Users/ishmenevev/Desktop/CopyLab/experience/src/components/UI/Input/withInput.js"],"names":["React","Component","withInput","Wrapper","constructor","props","pushSubmit","e","preventDefault","setState","formValid","validateForm","state","errors","errorCount","countErrors","valid","Object","values","forEach","val","length","count","firstName","lastName","email","render","inputChange","value"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;AAGA,MAAMC,SAAS,GAAIC,OAAD,IAAa;AAAA;;AAC7B,iBAAO,cAAcF,SAAd,CAAwB;AAC7BG,IAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,YAAMA,KAAN;;AADiB,WAanBC,UAbmB,GAaLC,CAAD,IAAO;AAClBA,QAAAA,CAAC,CAACC,cAAF;AACA,aAAKC,QAAL,CAAc;AAACC,UAAAA,SAAS,EAAEC,YAAY,CAAC,KAAKC,KAAL,CAAWC,MAAZ;AAAxB,SAAd;AACA,aAAKJ,QAAL,CAAc;AAACK,UAAAA,UAAU,EAAEC,WAAW,CAAC,KAAKH,KAAL,CAAWC,MAAZ;AAAxB,SAAd;AACD,OAjBkB;;AAAA,WAmBnBF,YAnBmB,GAmBHE,MAAD,IAAY;AACzB,YAAIG,KAAK,GAAG,IAAZ;AACAC,QAAAA,MAAM,CAACC,MAAP,CAAcL,MAAd,EAAsBM,OAAtB,CACGC,GAAD,IAASA,GAAG,CAACC,MAAJ,GAAa,CAAb,KAAmBL,KAAK,GAAG,KAA3B,CADX;AAGA,eAAOA,KAAP;AACD,OAzBkB;;AAAA,WA2BnBD,WA3BmB,GA2BJF,MAAD,IAAY;AACxB,YAAIS,KAAK,GAAG,CAAZ;AACAL,QAAAA,MAAM,CAACC,MAAP,CAAcL,MAAd,EAAsBM,OAAtB,CACGC,GAAD,IAASA,GAAG,CAACC,MAAJ,GAAa,CAAb,KAAmBC,KAAK,GAAGA,KAAK,GAAC,CAAjC,CADX;AAGA,eAAOA,KAAP;AACD,OAjCkB;;AAEjB,WAAKV,KAAL,GAAa;AACXF,QAAAA,SAAS,EAAE,KADA;AAEXI,QAAAA,UAAU,EAAE,IAFD;AAGXD,QAAAA,MAAM,EAAE;AACNU,UAAAA,SAAS,EAAE,EADL;AAENC,UAAAA,QAAQ,EAAE,EAFJ;AAGNC,UAAAA,KAAK,EAAE;AAHD;AAHG,OAAb;AASD;;AAyBHC,IAAAA,MAAM,GAAG;AAEL,aACE,oBAAC,OAAD,oBACU,KAAKrB,KADf;AAEM,QAAA,WAAW,EAAE,KAAKsB,WAFxB;AAGM,QAAA,UAAU,EAAE,KAAKrB,UAHvB;AAIM,QAAA,KAAK,EAAE,KAAKM,KAAL,CAAWgB,KAJxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SADF;AAOD;;AA9C4B,GAA/B;AAgDD,CAjDD;;AAmDA,eAAe1B,SAAf","sourcesContent":["import React, { Component } from 'react';\n\n\nconst withInput = (Wrapper) => {  \n  return class extends Component {\n    constructor(props) {\n      super(props);\n      this.state = {\n        formValid: false,\n        errorCount: null,\n        errors: {\n          firstName: '',\n          lastName: '',\n          email: ''\n        }\n      };\n    }  \n\n    pushSubmit = (e) => {\n      e.preventDefault();\n      this.setState({formValid: validateForm(this.state.errors)});\n      this.setState({errorCount: countErrors(this.state.errors)});  \n    }\n\n    validateForm = (errors) => {\n      let valid = true;\n      Object.values(errors).forEach(\n        (val) => val.length > 0 && (valid = false)\n      );\n      return valid;\n    }\n    \n    countErrors = (errors) => {\n      let count = 0;\n      Object.values(errors).forEach(\n        (val) => val.length > 0 && (count = count+1)\n      );\n      return count;\n    }\n    \n\n  render() {\n      \n      return (\n        <Wrapper \n              {...this.props}\n              inputChange={this.inputChange}\n              pushSubmit={this.pushSubmit}\n              value={this.state.value} />\n      )\n    }\n  }\n}\n\nexport default withInput;"]},"metadata":{},"sourceType":"module"}