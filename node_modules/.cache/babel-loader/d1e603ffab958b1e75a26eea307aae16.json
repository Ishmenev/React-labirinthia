{"ast":null,"code":"import _defineProperty from \"/Users/ishmenevev/Desktop/CopyLab/labirinthia-master/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/ishmenevev/Desktop/CopyLab/labirinthia-master/src/components/UI/Input/Input.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { Component } from 'react';\nimport styles from './Input.module.scss';\n\nconst ErrorStatus = () => {\n  return React.createElement(\"form\", {\n    onSubmit: this.testError,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 6\n    },\n    __self: this\n  }, this.props.children);\n};\n\nexport { ErrorStatus };\nexport default class Input extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      newUser: {\n        email: '',\n        username: '',\n        errorStatus: ''\n      }\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.emailFilled = this.emailFilled.bind(this);\n    this.testError = this.testError.bind(this);\n  }\n\n  handleChange(event) {\n    this.setState({\n      value: event.target.value\n    });\n  }\n\n  emailFilled(e) {\n    let value = e.target.value;\n    this.setState(prevState => ({\n      newUser: _objectSpread({}, prevState.newUser, {\n        email: value\n      })\n    }));\n  }\n\n  testError() {\n    let fullField = this.state.newUser.email;\n    let errorStatus = '';\n\n    if (fullField.match(/^([\\w.%+-]+)@([\\w-]+\\.)+([\\w]{2,})$/i)) {\n      errorStatus = 'valid';\n    } else {\n      errorStatus = 'invalid';\n    }\n\n    console.log(errorStatus);\n  }\n\n  render() {\n    const format = this.props.format;\n    let content = null;\n\n    if (format === 'text') {\n      content = React.createElement(\"input\", Object.assign({\n        type: \"text\",\n        className: styles.feedback__input,\n        value: this.state.username,\n        onChange: this.handleChange\n      }, this.props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }));\n    } else if (format === 'email') {\n      content = React.createElement(ErrorStatus, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        onClick: this.testError,\n        type: \"button\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, \"test\"), React.createElement(\"input\", Object.assign({\n        type: \"text\",\n        testError: this.testError,\n        className: styles.feedback__input,\n        value: this.state.email,\n        onChange: this.emailFilled\n      }, this.props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      })));\n    }\n\n    return content;\n  }\n\n}","map":{"version":3,"sources":["/Users/ishmenevev/Desktop/CopyLab/labirinthia-master/src/components/UI/Input/Input.js"],"names":["React","Component","styles","ErrorStatus","testError","props","children","Input","constructor","state","newUser","email","username","errorStatus","handleChange","bind","emailFilled","event","setState","value","target","e","prevState","fullField","match","console","log","render","format","content","feedback__input"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport styles from './Input.module.scss';\n\nconst ErrorStatus = () => {\n  return (\n  <form onSubmit={this.testError}>{this.props.children}</form>\n  )\n}\n\nexport {ErrorStatus};\n\nexport default class Input extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      newUser: {\n        email: '',\n        username: '',\n        errorStatus: ''\n      }\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.emailFilled = this.emailFilled.bind(this);\n    this.testError = this.testError.bind(this);\n  }\n\n\n  handleChange(event) {\n    this.setState({value: event.target.value});\n  }\n\n  emailFilled(e) {\n    let value = e.target.value;\n    this.setState( prevState => ({ newUser : \n        {...prevState.newUser, email: value\n        }\n      }))\n  }\n\n  testError() {\n    let fullField = this.state.newUser.email;\n    let errorStatus = '';\n    if (fullField.match(/^([\\w.%+-]+)@([\\w-]+\\.)+([\\w]{2,})$/i)) {\n      errorStatus = 'valid'\n    } else {\n      errorStatus = 'invalid'\n    }\n    console.log(errorStatus)\n  }\n\n\n  render() {\n    const {format} = this.props;\n    let content = null;\n\n    if (format === 'text') {\n      content = <input type='text' \n                        className={styles.feedback__input}\n                        value={this.state.username}\n                        onChange={this.handleChange}\n                        {...this.props}></input>\n    } \n\n    else if (format === 'email') {\n      content = \n        <ErrorStatus>\n          <button onClick={this.testError} type='button'>test</button>\n          <input type='text' \n          testError={this.testError}\n          className={styles.feedback__input}\n          value={this.state.email}\n          onChange={this.emailFilled}\n          {...this.props}></input>\n        </ErrorStatus>\n    }\n\n    return(\n      content\n    ) \n  }\n}\n"]},"metadata":{},"sourceType":"module"}