{"ast":null,"code":"import _defineProperty from \"/Users/ishmenevev/Desktop/CopyLab/labirinthia-master/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/ishmenevev/Desktop/CopyLab/labirinthia-master/src/components/UI/Input/Input.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { Component } from 'react';\nimport styles from './Input.module.scss';\nexport default class Input extends Component {\n  constructor(props) {\n    super(props);\n\n    this.exchange = value => {\n      this.setState({\n        user: value\n      });\n      console.log(this.state.user);\n    };\n\n    this.state = {\n      newUser: {\n        email: '',\n        username: '',\n        errorStatus: ''\n      },\n      user: 'Zhenia'\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.emailFilled = this.emailFilled.bind(this);\n    this.testError = this.testError.bind(this);\n  }\n\n  handleChange(event) {\n    this.setState({\n      value: event.target.value\n    });\n  }\n\n  emailFilled(e) {\n    let value = e.target.value;\n    this.setState(prevState => ({\n      newUser: _objectSpread({}, prevState.newUser, {\n        email: value\n      })\n    }));\n  }\n\n  testError() {\n    let fullField = this.state.newUser.email;\n    let errorStatus = '';\n\n    if (fullField.match(/^([\\w.%+-]+)@([\\w-]+\\.)+([\\w]{2,})$/i)) {\n      errorStatus = 'valid';\n    } else {\n      errorStatus = 'invalid';\n    }\n\n    console.log(errorStatus);\n  }\n\n  render() {\n    const format = this.props.format;\n    let content = null;\n\n    if (format === 'text') {\n      content = React.createElement(\"input\", Object.assign({\n        type: \"text\",\n        className: styles.feedback__input,\n        value: this.state.username,\n        onChange: this.handleChange\n      }, this.props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }));\n    } else if (format === 'email') {\n      content = React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        onClick: () => this.props.update(this.state.user),\n        type: \"button\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, \"test\"), React.createElement(\"input\", Object.assign({\n        type: \"text\",\n        testError: this.testError,\n        className: styles.feedback__input,\n        value: this.state.email,\n        onChange: this.emailFilled\n      }, this.props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      })));\n    }\n\n    return content;\n  }\n\n}","map":{"version":3,"sources":["/Users/ishmenevev/Desktop/CopyLab/labirinthia-master/src/components/UI/Input/Input.js"],"names":["React","Component","styles","Input","constructor","props","exchange","value","setState","user","console","log","state","newUser","email","username","errorStatus","handleChange","bind","emailFilled","testError","event","target","e","prevState","fullField","match","render","format","content","feedback__input","update"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport styles from './Input.module.scss';\n\nexport default class Input extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      newUser: {\n        email: '',\n        username: '',\n        errorStatus: ''\n      },\n      user: 'Zhenia'\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.emailFilled = this.emailFilled.bind(this);\n    this.testError = this.testError.bind(this);\n  }\n\n\n  handleChange(event) {\n    this.setState({value: event.target.value});\n  }\n\n  emailFilled(e) {\n    let value = e.target.value;\n    this.setState( prevState => ({ newUser : \n        {...prevState.newUser, email: value\n        }\n      }))\n  }\n\n\n  testError() {\n    let fullField = this.state.newUser.email;\n    let errorStatus = '';\n    if (fullField.match(/^([\\w.%+-]+)@([\\w-]+\\.)+([\\w]{2,})$/i)) {\n      errorStatus = 'valid'\n    } else {\n      errorStatus = 'invalid'\n    }\n    console.log(errorStatus)\n  }\n\n  exchange = (value) => {\n    this.setState({user: value})\n    console.log(this.state.user)\n  }\n\n  render() {\n    const {format} = this.props;\n    let content = null;\n\n    if (format === 'text') {\n      content = <input type='text' \n                        className={styles.feedback__input}\n                        value={this.state.username}\n                        onChange={this.handleChange}\n                        {...this.props}></input>\n    } \n\n    else if (format === 'email') {\n      content = \n        <div>\n          <button onClick={() => this.props.update(this.state.user)} type='button'>test</button>\n          <input type='text' \n          testError={this.testError}\n          className={styles.feedback__input}\n          value={this.state.email}\n          onChange={this.emailFilled}\n          {...this.props}></input>\n        </div>\n    }\n\n    return(\n      content\n    ) \n  }\n}\n"]},"metadata":{},"sourceType":"module"}