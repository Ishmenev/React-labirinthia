{"ast":null,"code":"var _jsxFileName = \"/Users/ishmenevev/Desktop/react-labirintiya/src/components/Options/Options.js\";\nimport React, { Component } from 'react';\nimport { Row, Col } from 'reactstrap';\nimport styles from './Options.module.scss';\nimport Level from '../Level/Level';\nimport Button from '../UI/Button/Button';\nimport news from '../News/news-data';\nexport default class Options extends Component {\n  constructor(props) {\n    super(props);\n\n    this.btnClicked = () => {\n      this.setState(state => {\n        return {\n          initStatus: !state.initStatus\n        };\n      });\n    };\n\n    this.state = {\n      levels: news.levels,\n      initStatus: false\n    };\n  }\n\n  updateFilter(arr, params) {\n    // if (arr.type === 'all') {\n    //   return arr\n    // }\n    return arr.filter(item => item.type === params);\n  }\n\n  render() {\n    let initStatus = this.state.initStatus;\n    const levels = this.state.levels.levels;\n    const filter = this.props.match.params.filter.filter;\n    let visibleLevels = this.updateFilter(levels, filter); // const visibleLevels = this.state.levels.filter(item => {\n    //   return(item.type === this.props.match.params.filter ? !item.type === 'all' : item)\n    // })\n\n    const selectedLevels = visibleLevels.map(item => {\n      return React.createElement(Col, {\n        md: 6,\n        lg: 5,\n        xl: 4,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, React.createElement(\"li\", {\n        className: styles.options__item,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, React.createElement(Level, {\n        description: item.description,\n        number: item.id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, item.id)));\n    });\n    const shownLevels = selectedLevels.slice(0, 6);\n    const hiddenLevels = selectedLevels.slice(6);\n    let addLevels = null;\n\n    if (initStatus) {\n      addLevels = hiddenLevels;\n    } else {\n      addLevels = null;\n    }\n\n    ;\n    return React.createElement(\"div\", {\n      className: styles.options,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, React.createElement(\"ul\", {\n      className: styles.options__list,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, shownLevels, addLevels)), React.createElement(\"div\", {\n      onClick: this.btnClicked,\n      className: styles.options__button,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, React.createElement(Button, {\n      domType: 'button',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, \"\\u0415\\u0449\\u0435 \\u0443\\u0440\\u043E\\u0432\\u043D\\u0438\")));\n  }\n\n}","map":{"version":3,"sources":["/Users/ishmenevev/Desktop/react-labirintiya/src/components/Options/Options.js"],"names":["React","Component","Row","Col","styles","Level","Button","news","Options","constructor","props","btnClicked","setState","state","initStatus","levels","updateFilter","arr","params","filter","item","type","render","match","visibleLevels","selectedLevels","map","options__item","description","id","shownLevels","slice","hiddenLevels","addLevels","options","options__list","options__button"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport { Row, Col } from 'reactstrap';\nimport styles from './Options.module.scss';\nimport Level from '../Level/Level';\nimport Button from '../UI/Button/Button';\nimport news from '../News/news-data';\n\n\nexport default class Options extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      levels: news.levels,\n      initStatus: false\n    }\n  }\n\n\n  btnClicked = () => {\n    this.setState((state) => {\n      return {\n        initStatus: !state.initStatus\n      }\n    })\n  }\n\n  updateFilter(arr, params) {\n    // if (arr.type === 'all') {\n    //   return arr\n    // }\n\n    return arr.filter(item => item.type === params)\n  }\n\n  render() {\n\n    let initStatus = this.state.initStatus;\n    const {levels} = this.state.levels;\n    const {filter} = this.props.match.params.filter;\n\n    let visibleLevels = this.updateFilter(levels, filter);\n\n    // const visibleLevels = this.state.levels.filter(item => {\n    //   return(item.type === this.props.match.params.filter ? !item.type === 'all' : item)\n    // })\n  \n    const selectedLevels = visibleLevels.map((item) => {\n      return (\n        <Col md={6} lg={5} xl={4}>\n          <li className={styles.options__item}>\n            <Level description={item.description}\n              number={item.id}>\n              {item.id}\n            </Level>\n          </li>\n        </Col>\n      )\n    })\n\n    const shownLevels = selectedLevels.slice(0, 6);\n    const hiddenLevels = selectedLevels.slice(6)\n    let addLevels = null;\n\n    if (initStatus) {\n      addLevels = hiddenLevels;\n    } else {\n      addLevels = null\n    };\n    \n\n    return (\n      <div className={styles.options}>\n        <ul className={styles.options__list}>\n          <Row>\n            {shownLevels}\n            {addLevels}\n          </Row>\n        </ul>\n        <div onClick={this.btnClicked} className={styles.options__button}>\n          <Button domType={'button'}>Еще уровни</Button>\n        </div>\n      </div>\n    ) \n  }\n}\n\n"]},"metadata":{},"sourceType":"module"}