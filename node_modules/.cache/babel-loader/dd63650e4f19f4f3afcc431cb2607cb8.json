{"ast":null,"code":"var _jsxFileName = \"/Users/ishmenevev/Desktop/CopyLab/labirinthia-master/src/components/UI/Input/Input.js\";\nimport React, { Component } from 'react';\nimport styles from './Input.module.scss';\nexport default class Input extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      email: '',\n      username: '',\n      errorStatus: '',\n      updateStatus: true\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.emailFilled = this.emailFilled.bind(this); // this.checkError = this.checkError.bind(this);\n  }\n\n  handleChange(event) {\n    this.setState({\n      value: event.target.value\n    });\n  }\n\n  emailFilled(event) {\n    const name = event.target.name;\n    const value = event.target.value;\n    this.setState({\n      [name]: value\n    });\n  } // checkError() {\n  //   let fullField = this.state.newUser.email;\n  //   let errorStatus = '';\n  //   if (fullField.match(/^([\\w.%+-]+)@([\\w-]+\\.)+([\\w]{2,})$/i)) {\n  //     errorStatus = 'valid'\n  //   } else {\n  //     errorStatus = 'invalid'\n  //   }\n  //   console.log(errorStatus)\n  // }\n\n\n  render() {\n    const format = this.props.format;\n    let content = null;\n\n    if (format === 'text') {\n      content = React.createElement(\"input\", Object.assign({\n        type: \"text\",\n        className: styles.feedback__input,\n        value: this.state.username,\n        onChange: this.handleChange\n      }, this.props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }));\n    } else if (format === 'email') {\n      content = React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, React.createElement(\"input\", Object.assign({\n        type: \"text\",\n        className: styles.feedback__input,\n        value: this.state.email,\n        onChange: this.emailFilled\n      }, this.props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      })));\n    }\n\n    return content;\n  }\n\n}","map":{"version":3,"sources":["/Users/ishmenevev/Desktop/CopyLab/labirinthia-master/src/components/UI/Input/Input.js"],"names":["React","Component","styles","Input","constructor","props","state","email","username","errorStatus","updateStatus","handleChange","bind","emailFilled","event","setState","value","target","name","render","format","content","feedback__input"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AAGA,eAAe,MAAMC,KAAN,SAAoBF,SAApB,CAA8B;AAC3CG,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,KAAK,EAAE,EADE;AAETC,MAAAA,QAAQ,EAAE,EAFD;AAGTC,MAAAA,WAAW,EAAE,EAHJ;AAITC,MAAAA,YAAY,EAAE;AAJL,KAAb;AAOA,SAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBC,IAAlB,CAAuB,IAAvB,CAApB;AACA,SAAKC,WAAL,GAAmB,KAAKA,WAAL,CAAiBD,IAAjB,CAAsB,IAAtB,CAAnB,CAViB,CAWjB;AACD;;AAGDD,EAAAA,YAAY,CAACG,KAAD,EAAQ;AAClB,SAAKC,QAAL,CAAc;AAACC,MAAAA,KAAK,EAAEF,KAAK,CAACG,MAAN,CAAaD;AAArB,KAAd;AACD;;AAEDH,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMI,IAAI,GAAGJ,KAAK,CAACG,MAAN,CAAaC,IAA1B;AACA,UAAMF,KAAK,GAAGF,KAAK,CAACG,MAAN,CAAaD,KAA3B;AACA,SAAKD,QAAL,CAAc;AAAC,OAACG,IAAD,GAAQF;AAAT,KAAd;AACD,GAxB0C,CA0B3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAIAG,EAAAA,MAAM,GAAG;AAAA,UACAC,MADA,GACU,KAAKf,KADf,CACAe,MADA;AAEP,QAAIC,OAAO,GAAG,IAAd;;AAEA,QAAID,MAAM,KAAK,MAAf,EAAuB;AACrBC,MAAAA,OAAO,GAAG;AAAO,QAAA,IAAI,EAAC,MAAZ;AACQ,QAAA,SAAS,EAAEnB,MAAM,CAACoB,eAD1B;AAEQ,QAAA,KAAK,EAAE,KAAKhB,KAAL,CAAWE,QAF1B;AAGQ,QAAA,QAAQ,EAAE,KAAKG;AAHvB,SAIY,KAAKN,KAJjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAV;AAKD,KAND,MAQK,IAAIe,MAAM,KAAK,OAAf,EAAwB;AAC3BC,MAAAA,OAAO,GACL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAO,QAAA,IAAI,EAAC,MAAZ;AACA,QAAA,SAAS,EAAEnB,MAAM,CAACoB,eADlB;AAEA,QAAA,KAAK,EAAE,KAAKhB,KAAL,CAAWC,KAFlB;AAGA,QAAA,QAAQ,EAAE,KAAKM;AAHf,SAII,KAAKR,KAJT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SADF,CADF;AAQD;;AAED,WACEgB,OADF;AAGD;;AAjE0C","sourcesContent":["import React, { Component } from 'react';\nimport styles from './Input.module.scss';\n\n\nexport default class Input extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n        email: '',\n        username: '',\n        errorStatus: '',\n        updateStatus: true\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.emailFilled = this.emailFilled.bind(this);\n    // this.checkError = this.checkError.bind(this);\n  }\n\n\n  handleChange(event) {\n    this.setState({value: event.target.value});\n  }\n\n  emailFilled(event) {\n    const name = event.target.name;\n    const value = event.target.value\n    this.setState({[name]: value});\n  }\n\n  // checkError() {\n  //   let fullField = this.state.newUser.email;\n  //   let errorStatus = '';\n  //   if (fullField.match(/^([\\w.%+-]+)@([\\w-]+\\.)+([\\w]{2,})$/i)) {\n  //     errorStatus = 'valid'\n  //   } else {\n  //     errorStatus = 'invalid'\n  //   }\n  //   console.log(errorStatus)\n  // }\n\n\n\n  render() {\n    const {format} = this.props;\n    let content = null;\n\n    if (format === 'text') {\n      content = <input type='text' \n                        className={styles.feedback__input}\n                        value={this.state.username}\n                        onChange={this.handleChange}\n                        {...this.props}></input>\n    } \n\n    else if (format === 'email') {\n      content = \n        <div>\n          <input type='text'\n          className={styles.feedback__input}\n          value={this.state.email}\n          onChange={this.emailFilled}\n          {...this.props}></input>\n        </div>\n    }\n\n    return(\n      content\n    ) \n  }\n}\n"]},"metadata":{},"sourceType":"module"}