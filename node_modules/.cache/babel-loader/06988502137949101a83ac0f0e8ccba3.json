{"ast":null,"code":"var _jsxFileName = \"/Users/ishmenevev/Desktop/CopyLab/labirinthia-master/src/components/UI/Input/Input.js\";\nimport React, { Component } from 'react';\nimport styles from './Input.module.scss';\nexport default class Input extends Component {\n  constructor(props) {\n    super(props);\n\n    this.emailFilled = e => {\n      const value = e.target.value;\n      this.setState({\n        email: value\n      }, () => console.log(this.state));\n    };\n\n    this.testFunc = () => {\n      const functor = this.props.handleChange;\n      const getData = this.props.email;\n\n      if (getData.match(/^([\\w.%+-]+)@([\\w-]+\\.)+([\\w]{2,})$/i)) {\n        return functor;\n      } else {\n        console.log('ERROR');\n      }\n    };\n\n    this.state = {\n      email: '',\n      username: ''\n    };\n    this.emailFilled = this.emailFilled.bind(this);\n    this.checkError = this.checkError.bind(this);\n  }\n\n  emailStatus() {\n    let fullField = this.state.email;\n    let errorStatus = '';\n\n    if (fullField.match(/^([\\w.%+-]+)@([\\w-]+\\.)+([\\w]{2,})$/i)) {\n      errorStatus = 'valid';\n    } else {\n      errorStatus = 'invalid';\n    }\n\n    console.log(errorStatus);\n  }\n\n  render() {\n    const format = this.props.format;\n    let content = null;\n\n    if (format === 'text') {\n      content = React.createElement(\"input\", Object.assign({\n        type: \"text\",\n        className: styles.feedback__input,\n        onChange: this.props.handleChange,\n        value: this.props.firstrname\n      }, this.props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }));\n    } else if (format === 'email') {\n      content = React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, React.createElement(\"input\", Object.assign({\n        type: \"text\",\n        className: styles.feedback__input,\n        value: this.props.email,\n        name: \"email\",\n        onChange: this.testFunc\n      }, this.props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      })));\n    }\n\n    return content;\n  }\n\n}","map":{"version":3,"sources":["/Users/ishmenevev/Desktop/CopyLab/labirinthia-master/src/components/UI/Input/Input.js"],"names":["React","Component","styles","Input","constructor","props","emailFilled","e","value","target","setState","email","console","log","state","testFunc","functor","handleChange","getData","match","username","bind","checkError","emailStatus","fullField","errorStatus","render","format","content","feedback__input","firstrname"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AAGA,eAAe,MAAMC,KAAN,SAAoBF,SAApB,CAA8B;AAC3CG,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAYnBC,WAZmB,GAYJC,CAAD,IAAO;AACnB,YAAMC,KAAK,GAAGD,CAAC,CAACE,MAAF,CAASD,KAAvB;AACA,WAAKE,QAAL,CAAc;AAACC,QAAAA,KAAK,EAAEH;AAAR,OAAd,EACc,MAAMI,OAAO,CAACC,GAAR,CAAY,KAAKC,KAAjB,CADpB;AAED,KAhBkB;;AAAA,SA6BnBC,QA7BmB,GA6BR,MAAM;AACf,YAAMC,OAAO,GAAG,KAAKX,KAAL,CAAWY,YAA3B;AACA,YAAMC,OAAO,GAAG,KAAKb,KAAL,CAAWM,KAA3B;;AAEA,UAAIO,OAAO,CAACC,KAAR,CAAc,sCAAd,CAAJ,EAA2D;AACzD,eAAOH,OAAP;AACD,OAFD,MAEO;AACLJ,QAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AACD;AACF,KAtCkB;;AAEjB,SAAKC,KAAL,GAAa;AACTH,MAAAA,KAAK,EAAE,EADE;AAETS,MAAAA,QAAQ,EAAE;AAFD,KAAb;AAKA,SAAKd,WAAL,GAAmB,KAAKA,WAAL,CAAiBe,IAAjB,CAAsB,IAAtB,CAAnB;AACA,SAAKC,UAAL,GAAkB,KAAKA,UAAL,CAAgBD,IAAhB,CAAqB,IAArB,CAAlB;AACD;;AASDE,EAAAA,WAAW,GAAG;AACZ,QAAIC,SAAS,GAAG,KAAKV,KAAL,CAAWH,KAA3B;AACA,QAAIc,WAAW,GAAG,EAAlB;;AACA,QAAID,SAAS,CAACL,KAAV,CAAgB,sCAAhB,CAAJ,EAA6D;AAC3DM,MAAAA,WAAW,GAAG,OAAd;AACD,KAFD,MAEO;AACLA,MAAAA,WAAW,GAAG,SAAd;AACD;;AACDb,IAAAA,OAAO,CAACC,GAAR,CAAYY,WAAZ;AACD;;AAeDC,EAAAA,MAAM,GAAG;AAAA,UACAC,MADA,GACU,KAAKtB,KADf,CACAsB,MADA;AAEP,QAAIC,OAAO,GAAG,IAAd;;AAEA,QAAID,MAAM,KAAK,MAAf,EAAuB;AACrBC,MAAAA,OAAO,GAAG;AAAO,QAAA,IAAI,EAAC,MAAZ;AACQ,QAAA,SAAS,EAAE1B,MAAM,CAAC2B,eAD1B;AAEQ,QAAA,QAAQ,EAAE,KAAKxB,KAAL,CAAWY,YAF7B;AAGQ,QAAA,KAAK,EAAE,KAAKZ,KAAL,CAAWyB;AAH1B,SAIY,KAAKzB,KAJjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAV;AAKD,KAND,MAQK,IAAIsB,MAAM,KAAK,OAAf,EAAwB;AAC3BC,MAAAA,OAAO,GACL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAO,QAAA,IAAI,EAAC,MAAZ;AACA,QAAA,SAAS,EAAE1B,MAAM,CAAC2B,eADlB;AAEA,QAAA,KAAK,EAAE,KAAKxB,KAAL,CAAWM,KAFlB;AAGA,QAAA,IAAI,EAAC,OAHL;AAIA,QAAA,QAAQ,EAAE,KAAKI;AAJf,SAKI,KAAKV,KALT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SADF,CADF;AASD;;AAED,WACEuB,OADF;AAGD;;AAtE0C","sourcesContent":["import React, { Component } from 'react';\nimport styles from './Input.module.scss';\n\n\nexport default class Input extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n        email: '',\n        username: ''\n    };\n\n    this.emailFilled = this.emailFilled.bind(this);\n    this.checkError = this.checkError.bind(this);\n  }\n\n\n  emailFilled = (e) => {\n    const value = e.target.value;\n    this.setState({email: value},\n                  () => console.log(this.state));\n  }\n\n  emailStatus() {\n    let fullField = this.state.email;\n    let errorStatus = '';\n    if (fullField.match(/^([\\w.%+-]+)@([\\w-]+\\.)+([\\w]{2,})$/i)) {\n      errorStatus = 'valid'\n    } else {\n      errorStatus = 'invalid'\n    }\n    console.log(errorStatus)\n  }\n\n  testFunc = () => {\n    const functor = this.props.handleChange;\n    const getData = this.props.email;\n    \n    if (getData.match(/^([\\w.%+-]+)@([\\w-]+\\.)+([\\w]{2,})$/i)) {\n      return functor\n    } else {\n      console.log('ERROR')\n    }\n  }\n\n\n\n  render() {\n    const {format} = this.props;\n    let content = null;\n\n    if (format === 'text') {\n      content = <input type='text' \n                        className={styles.feedback__input}\n                        onChange={this.props.handleChange}\n                        value={this.props.firstrname}\n                        {...this.props}></input>\n    } \n\n    else if (format === 'email') {\n      content = \n        <div>\n          <input type='text'\n          className={styles.feedback__input}\n          value={this.props.email}\n          name='email'\n          onChange={this.testFunc}\n          {...this.props}></input>\n        </div>\n    }\n\n    return(\n      content\n    ) \n  }\n}\n"]},"metadata":{},"sourceType":"module"}