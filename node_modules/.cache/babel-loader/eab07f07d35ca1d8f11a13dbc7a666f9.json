{"ast":null,"code":"var _jsxFileName = \"/Users/ishmenevev/Desktop/CopyLab/labirinthia-master/src/components/UI/Input/Input.js\";\nimport React, { Component } from 'react';\nimport styles from './Input.module.scss';\nexport default class Input extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      newUser: {\n        email: '',\n        errorStatus: false\n      }\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.emailFilled = this.emailFilled.bind(this);\n    this.testError = this.testError.bind(this);\n  }\n\n  handleChange(event) {\n    this.setState({\n      value: event.target.value\n    });\n  }\n\n  emailFilled(event) {\n    this.props.onChange(event.target.value);\n  }\n\n  testError() {} // emailFilled(e) {\n  //   let value = e.target.value;\n  //   this.setState( prevState => ({ newUser : \n  //       {...prevState.newUser, email: value\n  //       }\n  //     }), () => console.log(this.state.newUser))\n  // }\n\n\n  render() {\n    const format = this.props.format;\n    let content = null;\n\n    if (format === 'text') {\n      content = React.createElement(\"input\", Object.assign({\n        type: \"text\",\n        className: styles.feedback__input,\n        validation: this.state.errorStatus,\n        value: this.state.value,\n        onChange: this.handleChange\n      }, this.props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }));\n    } else if (format === 'email') {\n      content = React.createElement(\"input\", Object.assign({\n        type: \"text\",\n        className: styles.feedback__input,\n        value: this.state.email,\n        onChange: this.emailFilled\n      }, this.props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }));\n    }\n\n    return content;\n  }\n\n}","map":{"version":3,"sources":["/Users/ishmenevev/Desktop/CopyLab/labirinthia-master/src/components/UI/Input/Input.js"],"names":["React","Component","styles","Input","constructor","props","state","newUser","email","errorStatus","handleChange","bind","emailFilled","testError","event","setState","value","target","onChange","render","format","content","feedback__input"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AAEA,eAAe,MAAMC,KAAN,SAAoBF,SAApB,CAA8B;AAC3CG,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,OAAO,EAAE;AACPC,QAAAA,KAAK,EAAE,EADA;AAEPC,QAAAA,WAAW,EAAE;AAFN;AADE,KAAb;AAOA,SAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBC,IAAlB,CAAuB,IAAvB,CAApB;AACA,SAAKC,WAAL,GAAmB,KAAKA,WAAL,CAAiBD,IAAjB,CAAsB,IAAtB,CAAnB;AACA,SAAKE,SAAL,GAAiB,KAAKA,SAAL,CAAeF,IAAf,CAAoB,IAApB,CAAjB;AACD;;AAGDD,EAAAA,YAAY,CAACI,KAAD,EAAQ;AAClB,SAAKC,QAAL,CAAc;AAACC,MAAAA,KAAK,EAAEF,KAAK,CAACG,MAAN,CAAaD;AAArB,KAAd;AACD;;AAEDJ,EAAAA,WAAW,CAACE,KAAD,EAAQ;AACjB,SAAKT,KAAL,CAAWa,QAAX,CAAoBJ,KAAK,CAACG,MAAN,CAAaD,KAAjC;AACD;;AAEDH,EAAAA,SAAS,GAAG,CAEX,CA1B0C,CA6B3C;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEAM,EAAAA,MAAM,GAAG;AAAA,UACAC,MADA,GACU,KAAKf,KADf,CACAe,MADA;AAEP,QAAIC,OAAO,GAAG,IAAd;;AAEA,QAAID,MAAM,KAAK,MAAf,EAAuB;AACrBC,MAAAA,OAAO,GAAG;AAAO,QAAA,IAAI,EAAC,MAAZ;AACQ,QAAA,SAAS,EAAEnB,MAAM,CAACoB,eAD1B;AAEQ,QAAA,UAAU,EAAE,KAAKhB,KAAL,CAAWG,WAF/B;AAGQ,QAAA,KAAK,EAAE,KAAKH,KAAL,CAAWU,KAH1B;AAIQ,QAAA,QAAQ,EAAE,KAAKN;AAJvB,SAKY,KAAKL,KALjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAV;AAMD,KAPD,MASK,IAAIe,MAAM,KAAK,OAAf,EAAwB;AAC3BC,MAAAA,OAAO,GAAG;AAAO,QAAA,IAAI,EAAC,MAAZ;AACQ,QAAA,SAAS,EAAEnB,MAAM,CAACoB,eAD1B;AAEQ,QAAA,KAAK,EAAE,KAAKhB,KAAL,CAAWE,KAF1B;AAGQ,QAAA,QAAQ,EAAE,KAAKI;AAHvB,SAIY,KAAKP,KAJjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAV;AAKD;;AAED,WACEgB,OADF;AAGD;;AA7D0C","sourcesContent":["import React, { Component } from 'react';\nimport styles from './Input.module.scss';\n\nexport default class Input extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      newUser: {\n        email: '',\n        errorStatus: false\n      }\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.emailFilled = this.emailFilled.bind(this);\n    this.testError = this.testError.bind(this);\n  }\n\n\n  handleChange(event) {\n    this.setState({value: event.target.value});\n  }\n\n  emailFilled(event) {\n    this.props.onChange(event.target.value);\n  }\n\n  testError() {\n\n  }\n\n\n  // emailFilled(e) {\n  //   let value = e.target.value;\n  //   this.setState( prevState => ({ newUser : \n  //       {...prevState.newUser, email: value\n  //       }\n  //     }), () => console.log(this.state.newUser))\n  // }\n\n  render() {\n    const {format} = this.props;\n    let content = null;\n\n    if (format === 'text') {\n      content = <input type='text' \n                        className={styles.feedback__input}\n                        validation={this.state.errorStatus}\n                        value={this.state.value}\n                        onChange={this.handleChange}\n                        {...this.props}></input>\n    } \n\n    else if (format === 'email') {\n      content = <input type='text' \n                        className={styles.feedback__input}\n                        value={this.state.email}\n                        onChange={this.emailFilled}\n                        {...this.props}></input>\n    }\n\n    return(\n      content\n    ) \n  }\n}\n"]},"metadata":{},"sourceType":"module"}