{"ast":null,"code":"var _jsxFileName = \"/Users/ishmenevev/Desktop/react-labirintiya/src/components/Options/Options.js\";\nimport React from 'react';\nimport { Row, Col } from 'reactstrap';\nimport styles from './Options.module.scss';\nimport Level from '../Level/Level';\nimport Button from '../UI/Button/Button';\nimport news from '../News/news-data';\nconst levels = [{\n  id: 1,\n  type: 'narrative',\n  description: 'Вы оказались в загадочном лабиринте! Что делать? А вот хз!'\n}, {\n  id: 2,\n  type: 'creative',\n  description: 'Вы оказались в загадочном лабиринте! Что делать? А вот хз!'\n}, {\n  id: 3,\n  type: 'narrative',\n  description: 'Вы оказались в загадочном лабиринте! Что делать? А вот хз!'\n}, {\n  id: 4,\n  type: 'creative',\n  description: 'Вы оказались в загадочном лабиринте! Что делать? А вот хз!'\n}, {\n  id: 5,\n  type: 'creative',\n  description: 'Вы оказались в загадочном лабиринте! Что делать? А вот хз!'\n}, {\n  id: 6,\n  type: 'narrative',\n  description: 'Вы оказались в загадочном лабиринте! Что делать? А вот хз!'\n}];\n\nconst Options = () => {\n  const filter = match.params; // const visibleLevels = levels.filter(item => {\n  //   return (item.type === params.filter ? !item.type === 'all' : item)\n  // })\n\n  return (// <div className={styles.options}>\n    //   <ul className={styles.options__list}>\n    //     <Row>\n    //       {visibleLevels.map((item) => (\n    //         <Col md={6} lg={5} xl={4}>\n    //           <li className={styles.options__item}>\n    //             <Level description={item.description}\n    //               number={item.id}>\n    //               {item.id}\n    //             </Level>\n    //           </li>\n    //         </Col>\n    //           ))}                \n    //     </Row>\n    //   </ul>\n    //   <div className={styles.options__button}>\n    //     <Button domType={'button'}>Еще уровни</Button>\n    //   </div>\n    React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, filter)) // </div>\n\n  );\n};\n\nexport default Options;","map":{"version":3,"sources":["/Users/ishmenevev/Desktop/react-labirintiya/src/components/Options/Options.js"],"names":["React","Row","Col","styles","Level","Button","news","levels","id","type","description","Options","filter","match","params"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,GAAT,EAAcC,GAAd,QAAyB,YAAzB;AACA,OAAOC,MAAP,MAAmB,uBAAnB;AACA,OAAOC,KAAP,MAAkB,gBAAlB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,IAAP,MAAiB,mBAAjB;AAEA,MAAMC,MAAM,GAAI,CACd;AAACC,EAAAA,EAAE,EAAE,CAAL;AAAQC,EAAAA,IAAI,EAAE,WAAd;AAA2BC,EAAAA,WAAW,EAAE;AAAxC,CADc,EAEd;AAACF,EAAAA,EAAE,EAAE,CAAL;AAAQC,EAAAA,IAAI,EAAE,UAAd;AAA0BC,EAAAA,WAAW,EAAE;AAAvC,CAFc,EAGd;AAACF,EAAAA,EAAE,EAAE,CAAL;AAAQC,EAAAA,IAAI,EAAE,WAAd;AAA2BC,EAAAA,WAAW,EAAE;AAAxC,CAHc,EAId;AAACF,EAAAA,EAAE,EAAE,CAAL;AAAQC,EAAAA,IAAI,EAAE,UAAd;AAA0BC,EAAAA,WAAW,EAAE;AAAvC,CAJc,EAKd;AAACF,EAAAA,EAAE,EAAE,CAAL;AAAQC,EAAAA,IAAI,EAAE,UAAd;AAA0BC,EAAAA,WAAW,EAAE;AAAvC,CALc,EAMd;AAACF,EAAAA,EAAE,EAAE,CAAL;AAAQC,EAAAA,IAAI,EAAE,WAAd;AAA2BC,EAAAA,WAAW,EAAE;AAAxC,CANc,CAAhB;;AAUA,MAAMC,OAAO,GAAG,MAAM;AAEpB,QAAMC,MAAM,GAAGC,KAAK,CAACC,MAArB,CAFoB,CAKpB;AACA;AACA;;AAEA,SACE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKF,MAAL,CADF,CApBJ,CAuBE;;AAvBF;AA0BD,CAnCD;;AAqCA,eAAeD,OAAf","sourcesContent":["import React from 'react';\nimport { Row, Col } from 'reactstrap';\nimport styles from './Options.module.scss';\nimport Level from '../Level/Level';\nimport Button from '../UI/Button/Button';\nimport news from '../News/news-data';\n\nconst levels =  [\n  {id: 1, type: 'narrative', description: 'Вы оказались в загадочном лабиринте! Что делать? А вот хз!'},\n  {id: 2, type: 'creative', description: 'Вы оказались в загадочном лабиринте! Что делать? А вот хз!'},\n  {id: 3, type: 'narrative', description: 'Вы оказались в загадочном лабиринте! Что делать? А вот хз!'},\n  {id: 4, type: 'creative', description: 'Вы оказались в загадочном лабиринте! Что делать? А вот хз!'},\n  {id: 5, type: 'creative', description: 'Вы оказались в загадочном лабиринте! Что делать? А вот хз!'},\n  {id: 6, type: 'narrative', description: 'Вы оказались в загадочном лабиринте! Что делать? А вот хз!'}\n]\n\n\nconst Options = () => {\n\n  const filter = match.params;\n\n\n  // const visibleLevels = levels.filter(item => {\n  //   return (item.type === params.filter ? !item.type === 'all' : item)\n  // })\n\n  return (\n    // <div className={styles.options}>\n    //   <ul className={styles.options__list}>\n    //     <Row>\n    //       {visibleLevels.map((item) => (\n    //         <Col md={6} lg={5} xl={4}>\n    //           <li className={styles.options__item}>\n    //             <Level description={item.description}\n    //               number={item.id}>\n    //               {item.id}\n    //             </Level>\n    //           </li>\n    //         </Col>\n    //           ))}                \n    //     </Row>\n    //   </ul>\n    //   <div className={styles.options__button}>\n    //     <Button domType={'button'}>Еще уровни</Button>\n    //   </div>\n\n      <div>\n        <h2>{filter}</h2>\n      </div>\n    // </div>\n  )\n\n}\n\nexport default Options;\n\n"]},"metadata":{},"sourceType":"module"}