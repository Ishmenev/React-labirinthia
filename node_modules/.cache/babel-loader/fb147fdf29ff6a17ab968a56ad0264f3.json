{"ast":null,"code":"import _defineProperty from \"/Users/ishmenevev/Desktop/CopyLab/labirinthia-master/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/ishmenevev/Desktop/CopyLab/labirinthia-master/src/components/UI/Input/Input.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { Component } from 'react';\nimport styles from './Input.module.scss';\nexport default class Input extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      newUser: {\n        email: ''\n      }\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.emailFilled = this.emailFilled.bind(this);\n  }\n\n  handleChange(event) {\n    this.setState({\n      value: event.target.value\n    });\n  }\n\n  emailFilled(e) {\n    let value = e.target.value;\n    this.setState(prevState => ({\n      newUser: _objectSpread({}, prevState.newUser, {\n        email: value\n      })\n    }), () => {\n      this.validateField();\n    });\n  }\n\n  render() {\n    const format = this.props.format;\n    let content = null;\n\n    if (format === 'text') {\n      content = React.createElement(\"input\", Object.assign({\n        type: \"text\",\n        className: styles.feedback__input,\n        value: this.state.value,\n        onChange: this.handleChange\n      }, this.props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }));\n    } else if (format === 'email') {\n      content = React.createElement(\"input\", Object.assign({\n        type: \"text\",\n        className: styles.feedback__input,\n        value: this.state.email,\n        onChange: this.emailFilled\n      }, this.props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }));\n    }\n\n    return content;\n  }\n\n}","map":{"version":3,"sources":["/Users/ishmenevev/Desktop/CopyLab/labirinthia-master/src/components/UI/Input/Input.js"],"names":["React","Component","styles","Input","constructor","props","state","newUser","email","handleChange","bind","emailFilled","event","setState","value","target","e","prevState","validateField","render","format","content","feedback__input"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AAEA,eAAe,MAAMC,KAAN,SAAoBF,SAApB,CAA8B;AAC3CG,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,OAAO,EAAE;AACPC,QAAAA,KAAK,EAAE;AADA;AADE,KAAb;AAMA,SAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBC,IAAlB,CAAuB,IAAvB,CAApB;AACA,SAAKC,WAAL,GAAmB,KAAKA,WAAL,CAAiBD,IAAjB,CAAsB,IAAtB,CAAnB;AACD;;AAGDD,EAAAA,YAAY,CAACG,KAAD,EAAQ;AAClB,SAAKC,QAAL,CAAc;AAACC,MAAAA,KAAK,EAAEF,KAAK,CAACG,MAAN,CAAaD;AAArB,KAAd;AACD;;AAGDH,EAAAA,WAAW,CAACK,CAAD,EAAI;AACb,QAAIF,KAAK,GAAGE,CAAC,CAACD,MAAF,CAASD,KAArB;AACA,SAAKD,QAAL,CAAeI,SAAS,KAAK;AAAEV,MAAAA,OAAO,oBAC9BU,SAAS,CAACV,OADoB;AACXC,QAAAA,KAAK,EAAEM;AADI;AAAT,KAAL,CAAxB,EAGM,MAAM;AAAC,WAAKI,aAAL;AAAqB,KAHlC;AAID;;AAGDC,EAAAA,MAAM,GAAG;AAAA,UACAC,MADA,GACU,KAAKf,KADf,CACAe,MADA;AAEP,QAAIC,OAAO,GAAG,IAAd;;AAEA,QAAID,MAAM,KAAK,MAAf,EAAuB;AACrBC,MAAAA,OAAO,GAAG;AAAO,QAAA,IAAI,EAAC,MAAZ;AACQ,QAAA,SAAS,EAAEnB,MAAM,CAACoB,eAD1B;AAEQ,QAAA,KAAK,EAAE,KAAKhB,KAAL,CAAWQ,KAF1B;AAGQ,QAAA,QAAQ,EAAE,KAAKL;AAHvB,SAIY,KAAKJ,KAJjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAV;AAKD,KAND,MAQK,IAAIe,MAAM,KAAK,OAAf,EAAwB;AAC3BC,MAAAA,OAAO,GAAG;AAAO,QAAA,IAAI,EAAC,MAAZ;AACQ,QAAA,SAAS,EAAEnB,MAAM,CAACoB,eAD1B;AAEQ,QAAA,KAAK,EAAE,KAAKhB,KAAL,CAAWE,KAF1B;AAGQ,QAAA,QAAQ,EAAE,KAAKG;AAHvB,SAIY,KAAKN,KAJjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAV;AAKD;;AAED,WACEgB,OADF;AAGD;;AAnD0C","sourcesContent":["import React, { Component } from 'react';\nimport styles from './Input.module.scss';\n\nexport default class Input extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      newUser: {\n        email: ''\n      }\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.emailFilled = this.emailFilled.bind(this);\n  }\n\n\n  handleChange(event) {\n    this.setState({value: event.target.value});\n  }\n\n\n  emailFilled(e) {\n    let value = e.target.value;\n    this.setState( prevState => ({ newUser : \n        {...prevState.newUser, email: value\n        }\n      }), () => {this.validateField()})\n  }\n\n\n  render() {\n    const {format} = this.props;\n    let content = null;\n\n    if (format === 'text') {\n      content = <input type='text' \n                        className={styles.feedback__input}\n                        value={this.state.value}\n                        onChange={this.handleChange}\n                        {...this.props}></input>\n    } \n\n    else if (format === 'email') {\n      content = <input type='text' \n                        className={styles.feedback__input}\n                        value={this.state.email}\n                        onChange={this.emailFilled}\n                        {...this.props}></input>\n    }\n\n    return(\n      content\n    ) \n  }\n}\n"]},"metadata":{},"sourceType":"module"}