{"ast":null,"code":"var _jsxFileName = \"/Users/ishmenevev/Desktop/CopyLab/labirinthia-master/src/components/UI/Input/Input.js\";\nimport React, { Component } from 'react';\nimport styles from './Input.module.scss';\nexport default class Input extends Component {\n  constructor(props) {\n    super(props);\n\n    this.show = () => {\n      const getData = this.props.value;\n\n      if (getData.match(/^([\\w.%+-]+)@([\\w-]+\\.)+([\\w]{2,})$/i)) {\n        return this.props.handleChange;\n      } else {\n        console.log('fiasco');\n      }\n    };\n\n    this.state = {\n      email: '',\n      firstrname: '',\n      lastname: '',\n      isValid: true\n    };\n    this.emailError = this.emailError.bind(this);\n  }\n\n  emailError() {\n    let fullField = this.state.email;\n    let errorStatus = '';\n\n    if (fullField.match(/^([\\w.%+-]+)@([\\w-]+\\.)+([\\w]{2,})$/i)) {\n      errorStatus = 'valid';\n    } else {\n      errorStatus = 'invalid';\n    }\n\n    console.log(errorStatus);\n  }\n\n  render() {\n    const format = this.props.format;\n    let content = null;\n\n    if (format === 'text') {\n      content = React.createElement(\"input\", Object.assign({\n        type: \"text\",\n        className: styles.feedback__input\n      }, this.props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }));\n    } else if (format === 'email') {\n      content = React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        onClick: this.show,\n        type: \"button\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, \"show\"), React.createElement(\"input\", Object.assign({\n        type: \"text\",\n        className: styles.feedback__input,\n        name: \"email\",\n        onChange: this.props.handleChange ? this.state.isValid : this.show\n      }, this.props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      })));\n    }\n\n    return content;\n  }\n\n}","map":{"version":3,"sources":["/Users/ishmenevev/Desktop/CopyLab/labirinthia-master/src/components/UI/Input/Input.js"],"names":["React","Component","styles","Input","constructor","props","show","getData","value","match","handleChange","console","log","state","email","firstrname","lastname","isValid","emailError","bind","fullField","errorStatus","render","format","content","feedback__input"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AAGA,eAAe,MAAMC,KAAN,SAAoBF,SAApB,CAA8B;AAC3CG,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAwBnBC,IAxBmB,GAwBZ,MAAM;AACX,YAAMC,OAAO,GAAG,KAAKF,KAAL,CAAWG,KAA3B;;AACA,UAAID,OAAO,CAACE,KAAR,CAAc,sCAAd,CAAJ,EAA2D;AACzD,eAAO,KAAKJ,KAAL,CAAWK,YAAlB;AACD,OAFD,MAEO;AACLC,QAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ;AACD;AACF,KA/BkB;;AAEjB,SAAKC,KAAL,GAAa;AACXC,MAAAA,KAAK,EAAE,EADI;AAEXC,MAAAA,UAAU,EAAE,EAFD;AAGXC,MAAAA,QAAQ,EAAE,EAHC;AAIXC,MAAAA,OAAO,EAAE;AAJE,KAAb;AAOA,SAAKC,UAAL,GAAkB,KAAKA,UAAL,CAAgBC,IAAhB,CAAqB,IAArB,CAAlB;AACD;;AAGDD,EAAAA,UAAU,GAAG;AACX,QAAIE,SAAS,GAAG,KAAKP,KAAL,CAAWC,KAA3B;AACA,QAAIO,WAAW,GAAG,EAAlB;;AACA,QAAID,SAAS,CAACX,KAAV,CAAgB,sCAAhB,CAAJ,EAA6D;AAC3DY,MAAAA,WAAW,GAAG,OAAd;AACD,KAFD,MAEO;AACLA,MAAAA,WAAW,GAAG,SAAd;AACD;;AACDV,IAAAA,OAAO,CAACC,GAAR,CAAYS,WAAZ;AACD;;AAaDC,EAAAA,MAAM,GAAG;AAAA,UAEAC,MAFA,GAEU,KAAKlB,KAFf,CAEAkB,MAFA;AAGP,QAAIC,OAAO,GAAG,IAAd;;AAEA,QAAID,MAAM,KAAK,MAAf,EAAuB;AACrBC,MAAAA,OAAO,GAAG;AAAO,QAAA,IAAI,EAAC,MAAZ;AACQ,QAAA,SAAS,EAAEtB,MAAM,CAACuB;AAD1B,SAEY,KAAKpB,KAFjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAV;AAGD,KAJD,MAMK,IAAIkB,MAAM,KAAK,OAAf,EAAwB;AAC3BC,MAAAA,OAAO,GACL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAQ,QAAA,OAAO,EAAE,KAAKlB,IAAtB;AAA4B,QAAA,IAAI,EAAC,QAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,EAEE;AAAO,QAAA,IAAI,EAAC,MAAZ;AACA,QAAA,SAAS,EAAEJ,MAAM,CAACuB,eADlB;AAEA,QAAA,IAAI,EAAC,OAFL;AAGA,QAAA,QAAQ,EAAE,KAAKpB,KAAL,CAAWK,YAAX,GAA0B,KAAKG,KAAL,CAAWI,OAArC,GAA+C,KAAKX;AAH9D,SAII,KAAKD,KAJT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAFF,CADF;AASD;;AAED,WACEmB,OADF;AAGD;;AA9D0C","sourcesContent":["import React, { Component } from 'react';\nimport styles from './Input.module.scss';\n\n\nexport default class Input extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      email: '',\n      firstrname: '',\n      lastname: '',\n      isValid: true\n    };\n\n    this.emailError = this.emailError.bind(this);\n  }\n\n\n  emailError() {\n    let fullField = this.state.email;\n    let errorStatus = '';\n    if (fullField.match(/^([\\w.%+-]+)@([\\w-]+\\.)+([\\w]{2,})$/i)) {\n      errorStatus = 'valid'\n    } else {\n      errorStatus = 'invalid'\n    }\n    console.log(errorStatus)\n  }\n\n  show = () => {\n    const getData = this.props.value;\n    if (getData.match(/^([\\w.%+-]+)@([\\w-]+\\.)+([\\w]{2,})$/i)) {\n      return this.props.handleChange\n    } else {\n      console.log('fiasco')\n    }    \n  }\n\n\n\n  render() {\n\n    const {format} = this.props;\n    let content = null;\n\n    if (format === 'text') {\n      content = <input type='text' \n                        className={styles.feedback__input}\n                        {...this.props}></input>\n    } \n\n    else if (format === 'email') {\n      content = \n        <div>\n          <button onClick={this.show} type='button'>show</button>\n          <input type='text'\n          className={styles.feedback__input}\n          name='email'\n          onChange={this.props.handleChange ? this.state.isValid : this.show}\n          {...this.props}></input>\n        </div>\n    }\n\n    return(\n      content\n    ) \n  }\n}\n"]},"metadata":{},"sourceType":"module"}