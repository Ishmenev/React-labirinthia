{"ast":null,"code":"var _jsxFileName = \"/Users/ishmenevev/Desktop/react-labirintiya/src/components/Options/Options.js\";\nimport React, { Component } from 'react';\nimport { Row, Col } from 'reactstrap';\nimport styles from './Options.module.scss';\nimport Level from '../Level/Level';\nimport Button from '../UI/Button/Button';\nimport { newExpression } from '@babel/types';\nimport news from '../News/news-data';\nconst levels = [{\n  id: 1,\n  type: 'narrative',\n  description: 'Вы оказались в загадочном лабиринте! Что делать? А вот хз!'\n}, {\n  id: 2,\n  type: 'creative',\n  description: 'Вы оказались в загадочном лабиринте! Что делать? А вот хз!'\n}, {\n  id: 3,\n  type: 'narrative',\n  description: 'Вы оказались в загадочном лабиринте! Что делать? А вот хз!'\n}, {\n  id: 4,\n  type: 'creative',\n  description: 'Вы оказались в загадочном лабиринте! Что делать? А вот хз!'\n}, {\n  id: 5,\n  type: 'creative',\n  description: 'Вы оказались в загадочном лабиринте! Что делать? А вот хз!'\n}, {\n  id: 6,\n  type: 'narrative',\n  description: 'Вы оказались в загадочном лабиринте! Что делать? А вот хз!'\n}, {\n  id: 7,\n  type: 'narrative',\n  description: 'Вы оказались в загадочном лабиринте! Что делать? А вот хз!'\n}, {\n  id: 8,\n  type: 'creative',\n  description: 'Вы оказались в загадочном лабиринте! Что делать? А вот хз!'\n}, {\n  id: 9,\n  type: 'narrative',\n  description: 'Вы оказались в загадочном лабиринте! Что делать? А вот хз!'\n}, {\n  id: 10,\n  type: 'creative',\n  description: 'Вы оказались в загадочном лабиринте! Что делать? А вот хз!'\n}, {\n  id: 11,\n  type: 'creative',\n  description: 'Вы оказались в загадочном лабиринте! Что делать? А вот хз!'\n}, {\n  id: 12,\n  type: 'narrative',\n  description: 'Вы оказались в загадочном лабиринте! Что делать? А вот хз!'\n}];\nexport default class Options extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      levels: news.levels\n    };\n  }\n\n  render() {\n    const visibleLevels = this.state.levels.filter(item => {\n      return item.type === this.props.match.params.filter ? !item.type === 'all' : item;\n    });\n    const selectedLevels = visibleLevels.map(item => {\n      return React.createElement(Col, {\n        md: 6,\n        lg: 5,\n        xl: 4,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }, React.createElement(\"li\", {\n        className: styles.options__item,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, React.createElement(Level, {\n        description: item.description,\n        number: item.id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, item.id)));\n    });\n    const shownLevels = selectedLevels.slice(0, 3);\n    const hiddenLevels = selectedLevels.slice(3);\n    return React.createElement(\"div\", {\n      className: styles.options,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, React.createElement(\"ul\", {\n      className: styles.options__list,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, shownLevels, hiddenLevels)), React.createElement(\"div\", {\n      className: styles.options__button,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, React.createElement(Button, {\n      domType: 'button',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, \"\\u0415\\u0449\\u0435 \\u0443\\u0440\\u043E\\u0432\\u043D\\u0438\")));\n  }\n\n}","map":{"version":3,"sources":["/Users/ishmenevev/Desktop/react-labirintiya/src/components/Options/Options.js"],"names":["React","Component","Row","Col","styles","Level","Button","newExpression","news","levels","id","type","description","Options","constructor","props","state","render","visibleLevels","filter","item","match","params","selectedLevels","map","options__item","shownLevels","slice","hiddenLevels","options","options__list","options__button"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport { Row, Col } from 'reactstrap';\nimport styles from './Options.module.scss';\nimport Level from '../Level/Level';\nimport Button from '../UI/Button/Button';\nimport { newExpression } from '@babel/types';\nimport news from '../News/news-data';\n\nconst levels =  [\n  {id: 1, type: 'narrative', description: 'Вы оказались в загадочном лабиринте! Что делать? А вот хз!'},\n  {id: 2, type: 'creative', description: 'Вы оказались в загадочном лабиринте! Что делать? А вот хз!'},\n  {id: 3, type: 'narrative', description: 'Вы оказались в загадочном лабиринте! Что делать? А вот хз!'},\n  {id: 4, type: 'creative', description: 'Вы оказались в загадочном лабиринте! Что делать? А вот хз!'},\n  {id: 5, type: 'creative', description: 'Вы оказались в загадочном лабиринте! Что делать? А вот хз!'},\n  {id: 6, type: 'narrative', description: 'Вы оказались в загадочном лабиринте! Что делать? А вот хз!'},\n  {id: 7, type: 'narrative', description: 'Вы оказались в загадочном лабиринте! Что делать? А вот хз!'},\n  {id: 8, type: 'creative', description: 'Вы оказались в загадочном лабиринте! Что делать? А вот хз!'},\n  {id: 9, type: 'narrative', description: 'Вы оказались в загадочном лабиринте! Что делать? А вот хз!'},\n  {id: 10, type: 'creative', description: 'Вы оказались в загадочном лабиринте! Что делать? А вот хз!'},\n  {id: 11, type: 'creative', description: 'Вы оказались в загадочном лабиринте! Что делать? А вот хз!'},\n  {id: 12, type: 'narrative', description: 'Вы оказались в загадочном лабиринте! Что делать? А вот хз!'}\n]\n\n\nexport default class Options extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      levels: news.levels\n    }\n  }\n\n\n\n  render() {\n\n    const visibleLevels = this.state.levels.filter(item => {\n      return(item.type === this.props.match.params.filter ? !item.type === 'all' : item)\n    })\n  \n    const selectedLevels = visibleLevels.map((item) => {\n      return (\n        <Col md={6} lg={5} xl={4}>\n          <li className={styles.options__item}>\n            <Level description={item.description}\n              number={item.id}>\n              {item.id}\n            </Level>\n          </li>\n        </Col>\n      )\n    })\n\n    const shownLevels = selectedLevels.slice(0, 3);\n\n    const hiddenLevels = selectedLevels.slice(3);\n\n    return (\n      <div className={styles.options}>\n        <ul className={styles.options__list}>\n          <Row>\n            {shownLevels}\n            {hiddenLevels}\n            {/* {visibleLevels.map((item) => (\n              <Col md={6} lg={5} xl={4}>\n                <li className={styles.options__item}>\n                  <Level description={item.description}\n                    number={item.id}>\n                    {item.id}\n                  </Level>\n                </li>\n              </Col>\n                ))}                 */}\n          </Row>\n        </ul>\n        <div className={styles.options__button}>\n          <Button domType={'button'}>Еще уровни</Button>\n        </div>\n      </div>\n    ) \n\n  }\n\n}\n\n"]},"metadata":{},"sourceType":"module"}