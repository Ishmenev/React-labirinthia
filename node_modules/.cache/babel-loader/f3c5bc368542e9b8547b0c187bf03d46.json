{"ast":null,"code":"var _jsxFileName = \"/Users/ishmenevev/Desktop/CopyLab/labirinthia-master/src/components/UI/Input/Input.js\";\nimport React, { Component } from 'react';\nimport styles from './Input.module.scss';\nexport default class Input extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      email: '',\n      username: ''\n    }; // this.testFunc = this.testFunc.bind(this);\n  } // emailStatus() {\n  //   let fullField = this.state.email;\n  //   let errorStatus = '';\n  //   if (fullField.match(/^([\\w.%+-]+)@([\\w-]+\\.)+([\\w]{2,})$/i)) {\n  //     errorStatus = 'valid'\n  //   } else {\n  //     errorStatus = 'invalid'\n  //   }\n  //   console.log(errorStatus)\n  // }\n  // testFunc = () => {\n  //   const functor = this.props.testing();\n  // const getData = this.props.email;\n  // if (getData.match(/^([\\w.%+-]+)@([\\w-]+\\.)+([\\w]{2,})$/i)) {\n  //   return functor\n  // } else {\n  //   console.log('ERROR')\n  // }\n  //   return functor\n  // }\n\n\n  render() {\n    const format = this.props.format;\n    let content = null;\n\n    if (format === 'text') {\n      content = React.createElement(\"input\", Object.assign({\n        type: \"text\",\n        className: styles.feedback__input,\n        onChange: this.props.handleChange,\n        value: this.props.firstrname\n      }, this.props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }));\n    } else if (format === 'email') {\n      content = React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, React.createElement(\"input\", Object.assign({\n        type: \"text\",\n        className: styles.feedback__input,\n        value: this.props.email,\n        name: \"email\",\n        onChange: this.props.handleChange\n      }, this.props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      })));\n    }\n\n    return content;\n  }\n\n}","map":{"version":3,"sources":["/Users/ishmenevev/Desktop/CopyLab/labirinthia-master/src/components/UI/Input/Input.js"],"names":["React","Component","styles","Input","constructor","props","state","email","username","render","format","content","feedback__input","handleChange","firstrname"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AAGA,eAAe,MAAMC,KAAN,SAAoBF,SAApB,CAA8B;AAC3CG,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,KAAK,EAAE,EADE;AAETC,MAAAA,QAAQ,EAAE;AAFD,KAAb,CAFiB,CAOjB;AACD,GAT0C,CAY3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACE;AAEA;AACA;AACA;AACA;AACA;AAEF;AACA;;;AAIAC,EAAAA,MAAM,GAAG;AAAA,UACAC,MADA,GACU,KAAKL,KADf,CACAK,MADA;AAEP,QAAIC,OAAO,GAAG,IAAd;;AAEA,QAAID,MAAM,KAAK,MAAf,EAAuB;AACrBC,MAAAA,OAAO,GAAG;AAAO,QAAA,IAAI,EAAC,MAAZ;AACQ,QAAA,SAAS,EAAET,MAAM,CAACU,eAD1B;AAEQ,QAAA,QAAQ,EAAE,KAAKP,KAAL,CAAWQ,YAF7B;AAGQ,QAAA,KAAK,EAAE,KAAKR,KAAL,CAAWS;AAH1B,SAIY,KAAKT,KAJjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAV;AAKD,KAND,MAQK,IAAIK,MAAM,KAAK,OAAf,EAAwB;AAC3BC,MAAAA,OAAO,GACL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAO,QAAA,IAAI,EAAC,MAAZ;AACA,QAAA,SAAS,EAAET,MAAM,CAACU,eADlB;AAEA,QAAA,KAAK,EAAE,KAAKP,KAAL,CAAWE,KAFlB;AAGA,QAAA,IAAI,EAAC,OAHL;AAIA,QAAA,QAAQ,EAAE,KAAKF,KAAL,CAAWQ;AAJrB,SAKI,KAAKR,KALT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SADF,CADF;AASD;;AAED,WACEM,OADF;AAGD;;AAjE0C","sourcesContent":["import React, { Component } from 'react';\nimport styles from './Input.module.scss';\n\n\nexport default class Input extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n        email: '',\n        username: ''\n    };\n\n    // this.testFunc = this.testFunc.bind(this);\n  }\n\n\n  // emailStatus() {\n  //   let fullField = this.state.email;\n  //   let errorStatus = '';\n  //   if (fullField.match(/^([\\w.%+-]+)@([\\w-]+\\.)+([\\w]{2,})$/i)) {\n  //     errorStatus = 'valid'\n  //   } else {\n  //     errorStatus = 'invalid'\n  //   }\n  //   console.log(errorStatus)\n  // }\n\n  // testFunc = () => {\n  //   const functor = this.props.testing();\n    // const getData = this.props.email;\n    \n    // if (getData.match(/^([\\w.%+-]+)@([\\w-]+\\.)+([\\w]{2,})$/i)) {\n    //   return functor\n    // } else {\n    //   console.log('ERROR')\n    // }\n\n  //   return functor\n  // }\n\n\n\n  render() {\n    const {format} = this.props;\n    let content = null;\n\n    if (format === 'text') {\n      content = <input type='text' \n                        className={styles.feedback__input}\n                        onChange={this.props.handleChange}\n                        value={this.props.firstrname}\n                        {...this.props}></input>\n    } \n\n    else if (format === 'email') {\n      content = \n        <div>\n          <input type='text'\n          className={styles.feedback__input}\n          value={this.props.email}\n          name='email'\n          onChange={this.props.handleChange}\n          {...this.props}></input>\n        </div>\n    }\n\n    return(\n      content\n    ) \n  }\n}\n"]},"metadata":{},"sourceType":"module"}