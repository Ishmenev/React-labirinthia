{"ast":null,"code":"var _jsxFileName = \"/Users/ishmenevev/Desktop/CopyLab/experience/src/components/UI/Input/withInput.js\";\nimport React, { Component } from 'react';\nconst validEmailRegex = RegExp(/^(([^<>()\\[\\]\\.,;:\\s@\\\"]+(\\.[^<>()\\[\\]\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@(([^<>()[\\]\\.,;:\\s@\\\"]+\\.)+[^<>()[\\]\\.,;:\\s@\\\"]{2,})$/i);\n\nconst validateForm = errors => {\n  let valid = true;\n  Object.values(errors).forEach(val => val.length > 0 && (valid = false));\n  return valid;\n};\n\nconst countErrors = errors => {\n  let count = 0;\n  Object.values(errors).forEach(val => val.length > 0 && (count = count + 1));\n  return count;\n};\n\nconst withInput = Wrapper => {\n  var _temp;\n\n  return _temp = class extends Component {\n    constructor(props) {\n      super(props);\n\n      this.handleChange = event => {\n        event.preventDefault();\n        const _event$target = event.target,\n              name = _event$target.name,\n              value = _event$target.value;\n        let errors = this.state.errors;\n\n        switch (name) {\n          case 'fullName':\n            errors.fullName = value.length < 5 ? 'Full Name must be 5 characters long!' : '';\n            break;\n\n          case 'email':\n            errors.email = validEmailRegex.test(value) ? '' : 'Email is not valid!';\n            break;\n\n          case 'password':\n            errors.password = value.length < 8 ? 'Password must be 8 characters long!' : '';\n            break;\n\n          default:\n            break;\n        }\n\n        this.setState({\n          errors,\n          [name]: value\n        });\n      };\n\n      this.handleSubmit = event => {\n        event.preventDefault();\n        this.setState({\n          formValid: validateForm(this.state.errors)\n        });\n        this.setState({\n          errorCount: countErrors(this.state.errors)\n        });\n      };\n\n      this.state = {\n        formValid: false,\n        errorCount: null,\n        errors: {\n          fullName: '',\n          email: '',\n          password: ''\n        }\n      };\n    }\n\n    render() {\n      const _this$state = this.state,\n            errors = _this$state.errors,\n            formValid = _this$state.formValid;\n      return React.createElement(Wrapper, Object.assign({}, this.props, {\n        inputChange: this.handleChange,\n        pushSubmit: this.handleSubmit,\n        value: this.state.value,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }));\n    }\n\n  }, _temp;\n};\n\nexport default withInput;","map":{"version":3,"sources":["/Users/ishmenevev/Desktop/CopyLab/experience/src/components/UI/Input/withInput.js"],"names":["React","Component","validEmailRegex","RegExp","validateForm","errors","valid","Object","values","forEach","val","length","countErrors","count","withInput","Wrapper","constructor","props","handleChange","event","preventDefault","target","name","value","state","fullName","email","test","password","setState","handleSubmit","formValid","errorCount","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\n\nconst validEmailRegex = RegExp(/^(([^<>()\\[\\]\\.,;:\\s@\\\"]+(\\.[^<>()\\[\\]\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@(([^<>()[\\]\\.,;:\\s@\\\"]+\\.)+[^<>()[\\]\\.,;:\\s@\\\"]{2,})$/i);\nconst validateForm = (errors) => {\n  let valid = true;\n  Object.values(errors).forEach(\n    (val) => val.length > 0 && (valid = false)\n  );\n  return valid;\n}\n\nconst countErrors = (errors) => {\n  let count = 0;\n  Object.values(errors).forEach(\n    (val) => val.length > 0 && (count = count+1)\n  );\n  return count;\n}\n\n\nconst withInput = (Wrapper) => {  \n  return class extends Component {\n    constructor(props) {\n      super(props);\n      this.state = {\n        formValid: false,\n        errorCount: null,\n        errors: {\n          fullName: '',\n          email: '',\n          password: '',\n        }\n      };\n    }\n  \n    handleChange = (event) => {\n      event.preventDefault();\n      const { name, value } = event.target;\n      let errors = this.state.errors;\n  \n      switch (name) {\n        case 'fullName': \n          errors.fullName = \n            value.length < 5\n              ? 'Full Name must be 5 characters long!'\n              : '';\n          break;\n        case 'email': \n          errors.email = \n            validEmailRegex.test(value)\n              ? ''\n              : 'Email is not valid!';\n          break;\n        case 'password': \n          errors.password = \n            value.length < 8\n              ? 'Password must be 8 characters long!'\n              : '';\n          break;\n        default:\n          break;\n      }\n  \n      this.setState({errors, [name]: value});\n    }\n  \n    handleSubmit = (event) => {\n      event.preventDefault();\n      this.setState({formValid: validateForm(this.state.errors)});\n      this.setState({errorCount: countErrors(this.state.errors)});\n    }\n        \n\n    render() {\n      const {errors, formValid} = this.state;\n\n      \n      return (\n        <Wrapper \n              {...this.props}\n              inputChange={this.handleChange}\n              pushSubmit={this.handleSubmit}\n              value={this.state.value} />\n      )\n    }\n  }\n}\n\nexport default withInput;"]},"metadata":{},"sourceType":"module"}