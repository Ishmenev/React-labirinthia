{"ast":null,"code":"var _jsxFileName = \"/Users/ishmenevev/Desktop/react-labirintiya/src/pages/Games.js\";\nimport React, { Component } from 'react';\nimport Intro from '../components/Intro/Intro';\nimport Options from '../components/Options/Options';\nimport news from '../components/News/news-data';\nimport Filters from '../components/UI/Filters/Filters';\nimport { Container } from 'reactstrap';\nexport default class Games extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      levels: news.levels\n    };\n  }\n\n  filterLogic(levels, filter) {\n    levels = this.state.levels;\n    filter = this.props.filter;\n\n    switch (filter) {\n      case 'all':\n        return levels;\n\n      case 'narrative':\n        return levels.filter(item => item.type === filter);\n\n      case 'creative':\n        return levels.filter(item => item.type === filter);\n\n      default:\n        return levels;\n    }\n  }\n\n  render() {\n    const _this$state = this.state,\n          levels = _this$state.levels,\n          filter = _this$state.filter;\n    const visibleLevels = this.filterLogic(levels, filter);\n    return React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, React.createElement(Intro, {\n      introType: 'local',\n      label: \"\\u0418\\u0433\\u0440\\u0430\\u0442\\u044C\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }), React.createElement(Container, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, React.createElement(Filters, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }), React.createElement(Options, {\n      renderLevels: visibleLevels,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    })));\n  }\n\n}","map":{"version":3,"sources":["/Users/ishmenevev/Desktop/react-labirintiya/src/pages/Games.js"],"names":["React","Component","Intro","Options","news","Filters","Container","Games","constructor","props","state","levels","filterLogic","filter","item","type","render","visibleLevels"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,KAAP,MAAkB,2BAAlB;AACA,OAAOC,OAAP,MAAoB,+BAApB;AACA,OAAOC,IAAP,MAAiB,8BAAjB;AACA,OAAOC,OAAP,MAAoB,kCAApB;AACA,SAASC,SAAT,QAA0B,YAA1B;AAEA,eAAe,MAAMC,KAAN,SAAoBN,SAApB,CAA8B;AAC3CO,EAAAA,WAAW,CAACC,KAAD,EAAO;AAChB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,MAAM,EAAEP,IAAI,CAACO;AADF,KAAb;AAGD;;AAEDC,EAAAA,WAAW,CAACD,MAAD,EAASE,MAAT,EAAiB;AAC1BF,IAAAA,MAAM,GAAG,KAAKD,KAAL,CAAWC,MAApB;AACAE,IAAAA,MAAM,GAAG,KAAKJ,KAAL,CAAWI,MAApB;;AAEA,YAAOA,MAAP;AACE,WAAK,KAAL;AACE,eAAOF,MAAP;;AACF,WAAK,WAAL;AACE,eAAOA,MAAM,CAACE,MAAP,CAAcC,IAAI,IAAIA,IAAI,CAACC,IAAL,KAAcF,MAApC,CAAP;;AACF,WAAK,UAAL;AACE,eAAOF,MAAM,CAACE,MAAP,CAAcC,IAAI,IAAIA,IAAI,CAACC,IAAL,KAAcF,MAApC,CAAP;;AACF;AACE,eAAOF,MAAP;AARJ;AAUD;;AAEDK,EAAAA,MAAM,GAAG;AAAA,wBAEkB,KAAKN,KAFvB;AAAA,UAEAC,MAFA,eAEAA,MAFA;AAAA,UAEQE,MAFR,eAEQA,MAFR;AAIP,UAAMI,aAAa,GAAG,KAAKL,WAAL,CAAiBD,MAAjB,EAAyBE,MAAzB,CAAtB;AAEA,WACE,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,KAAD;AAAO,MAAA,SAAS,EAAE,OAAlB;AAA2B,MAAA,KAAK,EAAC,sCAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAGE,oBAAC,OAAD;AAAS,MAAA,YAAY,EAAEI,aAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHF,CAFF,CADF;AAUD;;AAxC0C","sourcesContent":["import React, {Component} from 'react';\nimport Intro from '../components/Intro/Intro';\nimport Options from '../components/Options/Options';\nimport news from '../components/News/news-data';\nimport Filters from '../components/UI/Filters/Filters';\nimport { Container } from 'reactstrap';\n\nexport default class Games extends Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      levels: news.levels\n    }\n  }\n\n  filterLogic(levels, filter) {\n    levels = this.state.levels;\n    filter = this.props.filter;\n\n    switch(filter) {\n      case 'all': \n        return levels;\n      case 'narrative':\n        return levels.filter(item => item.type === filter);\n      case 'creative':\n        return levels.filter(item => item.type === filter);\n      default:\n        return levels\n    }\n  }\n\n  render() {\n\n    const {levels, filter} = this.state;\n\n    const visibleLevels = this.filterLogic(levels, filter)\n      \n    return (\n      <React.Fragment>\n        <Intro introType={'local'} label='Играть'/>\n        <Container>\n          <Filters />\n\n          <Options renderLevels={visibleLevels}/>\n        </Container>\n      </React.Fragment>\n    )\n  }\n}"]},"metadata":{},"sourceType":"module"}