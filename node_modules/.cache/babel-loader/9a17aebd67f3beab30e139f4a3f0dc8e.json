{"ast":null,"code":"import _defineProperty from \"/Users/ishmenevev/Desktop/CopyLab/labirinthia-master/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/ishmenevev/Desktop/CopyLab/labirinthia-master/src/components/UI/Input/Input.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { Component } from 'react';\nimport styles from './Input.module.scss';\nexport default class Input extends Component {\n  constructor(props) {\n    super(props); // this.state = {\n    //   newUser: {\n    //     email: ''\n    //   }\n    // };\n\n    this.validate = () => {\n      let emailError = '';\n\n      if (!this.state.email.includes('@')) {\n        emailError = 'Error';\n      }\n\n      if (emailError) {\n        this.setState({\n          emailError\n        });\n        return false;\n      }\n\n      return true;\n    };\n\n    this.state = {\n      email: '',\n      emailError: ''\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.emailFilled = this.emailFilled.bind(this);\n  }\n\n  handleChange(event) {\n    this.setState({\n      value: event.target.value\n    });\n  }\n\n  emailFilled(e) {\n    let value = e.target.value;\n    this.setState(prevState => ({\n      newUser: _objectSpread({}, prevState.newUser, {\n        email: value\n      })\n    }), () => {\n      console.log(this.state.newUser);\n    });\n  }\n\n  // handleSubmit = (e) => {\n  //   const isValid = this.validate();\n  //   if (isValid) {\n  //     console.log(this.state)\n  //   }\n  // }\n  render() {\n    const format = this.props.format;\n    let content = null;\n\n    if (format === 'text') {\n      content = React.createElement(\"input\", Object.assign({\n        type: \"text\",\n        className: styles.feedback__input,\n        value: this.state.value,\n        onChange: this.handleChange\n      }, this.props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }));\n    } else if (format === 'email') {\n      content = React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        style: {\n          color: 'tomato',\n          fontSize: 14,\n          position: 'absolute',\n          top: -22\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, this.state.emailError), React.createElement(\"input\", Object.assign({\n        type: \"text\",\n        className: styles.feedback__input,\n        value: this.state.email,\n        onChange: this.emailFilled\n      }, this.props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      })));\n    }\n\n    return content;\n  }\n\n}","map":{"version":3,"sources":["/Users/ishmenevev/Desktop/CopyLab/labirinthia-master/src/components/UI/Input/Input.js"],"names":["React","Component","styles","Input","constructor","props","validate","emailError","state","email","includes","setState","handleChange","bind","emailFilled","event","value","target","e","prevState","newUser","console","log","render","format","content","feedback__input","color","fontSize","position","top"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport styles from './Input.module.scss';\n\nexport default class Input extends Component {\n  constructor(props) {\n    super(props);\n    // this.state = {\n    //   newUser: {\n    //     email: ''\n    //   }\n    // };\n\n    this.state = {\n      email: '',\n      emailError: ''\n    }\n\n    this.handleChange = this.handleChange.bind(this);\n    this.emailFilled = this.emailFilled.bind(this);\n  }\n\n\n  handleChange(event) {\n    this.setState({value: event.target.value});\n  }\n\n\n  emailFilled(e) {\n    let value = e.target.value;\n    this.setState( prevState => ({ newUser : \n        {...prevState.newUser, email: value\n        }\n      }), () => {console.log(this.state.newUser)})\n  }\n\n  validate = () => {\n    let emailError = '';\n\n    if (!this.state.email.includes('@')) {\n      emailError = 'Error'\n    }\n\n    if (emailError) {\n      this.setState({emailError})\n      return false\n    }\n\n    return true\n  }\n\n  // handleSubmit = (e) => {\n  //   const isValid = this.validate();\n  //   if (isValid) {\n  //     console.log(this.state)\n  //   }\n  // }\n\n  render() {\n    const {format} = this.props;\n    let content = null;\n\n    if (format === 'text') {\n      content = <input type='text' \n                        className={styles.feedback__input}\n                        value={this.state.value}\n                        onChange={this.handleChange}\n                        {...this.props}></input>\n    } \n\n    else if (format === 'email') {\n      content = \n        <div>\n          <div style={{color: 'tomato', fontSize: 14, position: 'absolute', top: -22}}>\n            {this.state.emailError}\n          </div>\n          <input type='text' \n          className={styles.feedback__input}\n          value={this.state.email}\n          onChange={this.emailFilled}\n          {...this.props}></input>\n        </div>\n    }\n\n    return(\n      content\n    ) \n  }\n}\n"]},"metadata":{},"sourceType":"module"}