{"ast":null,"code":"var _jsxFileName = \"/Users/ishmenevev/Desktop/react-labirintiya/src/components/Options/Options.js\";\nimport React, { Component } from 'react';\nimport { Row, Col } from 'reactstrap';\nimport styles from './Options.module.scss';\nimport Level from '../Level/Level';\nimport Button from '../UI/Button/Button';\nimport news from '../News/news-data';\nimport { withRouter, useParams } from 'react-router-dom';\nconst levels = [{\n  id: 1,\n  type: 'narrative',\n  description: 'Вы оказались в загадочном лабиринте! Что делать? А вот хз!'\n}, {\n  id: 2,\n  type: 'creative',\n  description: 'Вы оказались в загадочном лабиринте! Что делать? А вот хз!'\n}, {\n  id: 3,\n  type: 'narrative',\n  description: 'Вы оказались в загадочном лабиринте! Что делать? А вот хз!'\n}, {\n  id: 4,\n  type: 'creative',\n  description: 'Вы оказались в загадочном лабиринте! Что делать? А вот хз!'\n}, {\n  id: 5,\n  type: 'creative',\n  description: 'Вы оказались в загадочном лабиринте! Что делать? А вот хз!'\n}, {\n  id: 6,\n  type: 'narrative',\n  description: 'Вы оказались в загадочном лабиринте! Что делать? А вот хз!'\n}];\n\nconst Options = ({\n  match: {\n    params\n  }\n}) => {\n  const filter = params.filter;\n\n  const filterLogic = filter => {\n    switch (filter) {\n      case filter === 'all':\n        return levels;\n\n      case filter === 'narrative':\n        return levels.filter(item => item.type === 'narrative');\n\n      case filter === 'creative':\n        return levels.filter(item => item.type === 'creative');\n\n      default:\n        return levels;\n    }\n  };\n\n  const visibleLevels = filterLogic(levels, filter);\n  return React.createElement(\"div\", {\n    className: styles.options,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, React.createElement(\"ul\", {\n    className: styles.options__list,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, React.createElement(Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, visibleLevels.map(item => React.createElement(Col, {\n    md: 6,\n    lg: 5,\n    xl: 4,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, React.createElement(\"li\", {\n    className: styles.options__item,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, React.createElement(Level, {\n    description: item.description,\n    number: item.id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, item.id)))))), React.createElement(\"div\", {\n    className: styles.options__button,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, React.createElement(Button, {\n    domType: 'button',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, \"\\u0415\\u0449\\u0435 \\u0443\\u0440\\u043E\\u0432\\u043D\\u0438\")), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, filter)));\n};\n\nexport default Options;","map":{"version":3,"sources":["/Users/ishmenevev/Desktop/react-labirintiya/src/components/Options/Options.js"],"names":["React","Component","Row","Col","styles","Level","Button","news","withRouter","useParams","levels","id","type","description","Options","match","params","filter","filterLogic","item","visibleLevels","options","options__list","map","options__item","options__button"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport { Row, Col } from 'reactstrap';\nimport styles from './Options.module.scss';\nimport Level from '../Level/Level';\nimport Button from '../UI/Button/Button';\nimport news from '../News/news-data';\nimport {withRouter, useParams} from 'react-router-dom';\n\nconst levels =  [\n  {id: 1, type: 'narrative', description: 'Вы оказались в загадочном лабиринте! Что делать? А вот хз!'},\n  {id: 2, type: 'creative', description: 'Вы оказались в загадочном лабиринте! Что делать? А вот хз!'},\n  {id: 3, type: 'narrative', description: 'Вы оказались в загадочном лабиринте! Что делать? А вот хз!'},\n  {id: 4, type: 'creative', description: 'Вы оказались в загадочном лабиринте! Что делать? А вот хз!'},\n  {id: 5, type: 'creative', description: 'Вы оказались в загадочном лабиринте! Что делать? А вот хз!'},\n  {id: 6, type: 'narrative', description: 'Вы оказались в загадочном лабиринте! Что делать? А вот хз!'}\n]\n\n\nconst Options = ({match: {params}}) => {\n\n  const filter = params.filter;\n\n  const filterLogic = (filter) => {\n\n    switch(filter) {\n      case (filter === 'all'): \n        return levels;\n      case (filter === 'narrative'):\n        return levels.filter(item => item.type === 'narrative');\n      case (filter === 'creative'):\n        return levels.filter(item => item.type === 'creative');\n      default:\n        return levels\n    }  \n  }\n\n  const visibleLevels = filterLogic(levels, filter)\n\n\n  return (\n    <div className={styles.options}>\n      <ul className={styles.options__list}>\n        <Row>\n          {visibleLevels.map((item) => (\n            <Col md={6} lg={5} xl={4}>\n              <li className={styles.options__item}>\n                <Level description={item.description}\n                  number={item.id}>\n                  {item.id}\n                </Level>\n              </li>\n            </Col>\n              ))}                \n        </Row>\n      </ul>\n      <div className={styles.options__button}>\n        <Button domType={'button'}>Еще уровни</Button>\n      </div>\n\n      <div>\n        <h2>{filter}</h2>\n      </div>\n    </div>\n  )\n\n}\n\nexport default Options;\n\n"]},"metadata":{},"sourceType":"module"}