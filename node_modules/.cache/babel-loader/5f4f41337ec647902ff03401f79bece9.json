{"ast":null,"code":"var _jsxFileName = \"/Users/ishmenevev/Desktop/CopyLab/labirinthia-master/src/components/UI/Input/Input.js\";\nimport React, { Component } from 'react';\nimport styles from './Input.module.scss';\nimport FormError from './FormError';\nexport default class Input extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      value: '',\n      email: '',\n      formErrors: {\n        email: ''\n      },\n      emailValid: false,\n      formValid: false\n    };\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  handleChange(e) {\n    const name = e.target.name;\n    const value = e.target.value;\n    this.setState({\n      [name]: value\n    });\n  }\n\n  render() {\n    const inputType = this.props.inputType;\n    let content = null;\n\n    if (inputType === 'text') {\n      content = React.createElement(\"input\", Object.assign({\n        type: \"text\",\n        className: styles.feedback__input,\n        value: this.state.value,\n        onChange: this.handleChange\n      }, this.props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      }));\n    } else if (inputType === 'email') {\n      content = React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }, React.createElement(FormError, {\n        formErrors: this.state.formErrors,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }), React.createElement(\"input\", Object.assign({\n        type: \"email\",\n        className: styles.feedback__input,\n        onChange: this.handleChange,\n        value: this.state.email,\n        onChange: this.handleChange\n      }, this.props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      })));\n    }\n\n    return content;\n  }\n\n}","map":{"version":3,"sources":["/Users/ishmenevev/Desktop/CopyLab/labirinthia-master/src/components/UI/Input/Input.js"],"names":["React","Component","styles","FormError","Input","constructor","props","state","value","email","formErrors","emailValid","formValid","handleChange","bind","e","name","target","setState","render","inputType","content","feedback__input"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AAEA,eAAe,MAAMC,KAAN,SAAoBH,SAApB,CAA8B;AAC3CI,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,KAAK,EAAE,EADI;AAEXC,MAAAA,KAAK,EAAE,EAFI;AAGXC,MAAAA,UAAU,EAAE;AAACD,QAAAA,KAAK,EAAE;AAAR,OAHD;AAIXE,MAAAA,UAAU,EAAE,KAJD;AAKXC,MAAAA,SAAS,EAAE;AALA,KAAb;AAQA,SAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBC,IAAlB,CAAuB,IAAvB,CAApB;AACD;;AAGDD,EAAAA,YAAY,CAACE,CAAD,EAAI;AACd,UAAMC,IAAI,GAAGD,CAAC,CAACE,MAAF,CAASD,IAAtB;AACA,UAAMR,KAAK,GAAGO,CAAC,CAACE,MAAF,CAAST,KAAvB;AACA,SAAKU,QAAL,CAAc;AAAC,OAACF,IAAD,GAAQR;AAAT,KAAd;AACD;;AAEDW,EAAAA,MAAM,GAAG;AAAA,UACAC,SADA,GACa,KAAKd,KADlB,CACAc,SADA;AAEP,QAAIC,OAAO,GAAG,IAAd;;AAEA,QAAID,SAAS,KAAK,MAAlB,EAA0B;AACxBC,MAAAA,OAAO,GAAG;AAAO,QAAA,IAAI,EAAC,MAAZ;AACQ,QAAA,SAAS,EAAEnB,MAAM,CAACoB,eAD1B;AAEQ,QAAA,KAAK,EAAE,KAAKf,KAAL,CAAWC,KAF1B;AAGQ,QAAA,QAAQ,EAAE,KAAKK;AAHvB,SAIY,KAAKP,KAJjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAV;AAKD,KAND,MAQK,IAAIc,SAAS,KAAK,OAAlB,EAA2B;AAC9BC,MAAAA,OAAO,GACL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,SAAD;AAAW,QAAA,UAAU,EAAE,KAAKd,KAAL,CAAWG,UAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAEE;AAAO,QAAA,IAAI,EAAC,OAAZ;AACE,QAAA,SAAS,EAAER,MAAM,CAACoB,eADpB;AAEE,QAAA,QAAQ,EAAE,KAAKT,YAFjB;AAGE,QAAA,KAAK,EAAE,KAAKN,KAAL,CAAWE,KAHpB;AAIE,QAAA,QAAQ,EAAE,KAAKI;AAJjB,SAKM,KAAKP,KALX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAFF,CADF;AAYD;;AAED,WACEe,OADF;AAGD;;AAnD0C","sourcesContent":["import React, { Component } from 'react';\nimport styles from './Input.module.scss';\nimport FormError from './FormError';\n\nexport default class Input extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      value: '',\n      email: '',\n      formErrors: {email: ''},\n      emailValid: false,\n      formValid: false\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n\n  handleChange(e) {\n    const name = e.target.name;\n    const value = e.target.value;\n    this.setState({[name]: value});\n  }\n\n  render() {\n    const {inputType} = this.props;\n    let content = null;\n\n    if (inputType === 'text') {\n      content = <input type='text' \n                        className={styles.feedback__input}\n                        value={this.state.value}\n                        onChange={this.handleChange}\n                        {...this.props}></input>\n    } \n\n    else if (inputType === 'email') {\n      content = \n        <div>\n          <FormError formErrors={this.state.formErrors} />\n          <input type='email' \n            className={styles.feedback__input}\n            onChange={this.handleChange}\n            value={this.state.email}\n            onChange={this.handleChange}\n            {...this.props}>\n          </input>\n        </div>\n\n    }\n\n    return(\n      content\n    ) \n  }\n}\n"]},"metadata":{},"sourceType":"module"}