{"ast":null,"code":"var _jsxFileName = \"/Users/ishmenevev/Desktop/CopyLab/labirinthia-master/src/components/UI/Input/Input.js\";\nimport React, { Component } from 'react';\nimport styles from './Input.module.scss';\nexport default class Input extends Component {\n  constructor(props) {\n    super(props);\n\n    this.emailFilled = e => {\n      const value = e.target.value;\n      this.setState({\n        email: value\n      }, () => console.log(this.state));\n    };\n\n    this.state = {\n      email: '',\n      firstrname: '',\n      lastname: ''\n    };\n    this.emailFilled = this.emailFilled.bind(this);\n    this.emailError = this.emailError.bind(this);\n  }\n\n  emailError() {\n    let fullField = this.state.email;\n    let errorStatus = '';\n\n    if (fullField.match(/^([\\w.%+-]+)@([\\w-]+\\.)+([\\w]{2,})$/i)) {\n      errorStatus = 'valid';\n    } else {\n      errorStatus = 'invalid';\n    }\n\n    console.log(errorStatus);\n  }\n\n  render() {\n    console.log('value', this.props.email);\n    const format = this.props.format;\n    let content = null;\n\n    if (format === 'text') {\n      content = React.createElement(\"input\", Object.assign({\n        type: \"text\",\n        className: styles.feedback__input,\n        onChange: this.props.handleChange,\n        value: this.state.firstrname\n      }, this.props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }));\n    } else if (format === 'email') {\n      content = React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, React.createElement(\"input\", Object.assign({\n        type: \"text\",\n        className: styles.feedback__input,\n        value: this.props.email,\n        name: \"email\",\n        onChange: this.props.handleChange\n      }, this.props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      })));\n    }\n\n    return content;\n  }\n\n}","map":{"version":3,"sources":["/Users/ishmenevev/Desktop/CopyLab/labirinthia-master/src/components/UI/Input/Input.js"],"names":["React","Component","styles","Input","constructor","props","emailFilled","e","value","target","setState","email","console","log","state","firstrname","lastname","bind","emailError","fullField","errorStatus","match","render","format","content","feedback__input","handleChange"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AAGA,eAAe,MAAMC,KAAN,SAAoBF,SAApB,CAA8B;AAC3CG,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAanBC,WAbmB,GAaJC,CAAD,IAAO;AACnB,YAAMC,KAAK,GAAGD,CAAC,CAACE,MAAF,CAASD,KAAvB;AACA,WAAKE,QAAL,CAAc;AAACC,QAAAA,KAAK,EAAEH;AAAR,OAAd,EACc,MAAMI,OAAO,CAACC,GAAR,CAAY,KAAKC,KAAjB,CADpB;AAED,KAjBkB;;AAEjB,SAAKA,KAAL,GAAa;AACXH,MAAAA,KAAK,EAAE,EADI;AAEXI,MAAAA,UAAU,EAAE,EAFD;AAGXC,MAAAA,QAAQ,EAAE;AAHC,KAAb;AAMA,SAAKV,WAAL,GAAmB,KAAKA,WAAL,CAAiBW,IAAjB,CAAsB,IAAtB,CAAnB;AACA,SAAKC,UAAL,GAAkB,KAAKA,UAAL,CAAgBD,IAAhB,CAAqB,IAArB,CAAlB;AACD;;AASDC,EAAAA,UAAU,GAAG;AACX,QAAIC,SAAS,GAAG,KAAKL,KAAL,CAAWH,KAA3B;AACA,QAAIS,WAAW,GAAG,EAAlB;;AACA,QAAID,SAAS,CAACE,KAAV,CAAgB,sCAAhB,CAAJ,EAA6D;AAC3DD,MAAAA,WAAW,GAAG,OAAd;AACD,KAFD,MAEO;AACLA,MAAAA,WAAW,GAAG,SAAd;AACD;;AACDR,IAAAA,OAAO,CAACC,GAAR,CAAYO,WAAZ;AACD;;AAIDE,EAAAA,MAAM,GAAG;AACPV,IAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqB,KAAKR,KAAL,CAAWM,KAAhC;AADO,UAEAY,MAFA,GAEU,KAAKlB,KAFf,CAEAkB,MAFA;AAGP,QAAIC,OAAO,GAAG,IAAd;;AAEA,QAAID,MAAM,KAAK,MAAf,EAAuB;AACrBC,MAAAA,OAAO,GAAG;AAAO,QAAA,IAAI,EAAC,MAAZ;AACQ,QAAA,SAAS,EAAEtB,MAAM,CAACuB,eAD1B;AAEQ,QAAA,QAAQ,EAAE,KAAKpB,KAAL,CAAWqB,YAF7B;AAGQ,QAAA,KAAK,EAAE,KAAKZ,KAAL,CAAWC;AAH1B,SAIY,KAAKV,KAJjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAV;AAKD,KAND,MAQK,IAAIkB,MAAM,KAAK,OAAf,EAAwB;AAC3BC,MAAAA,OAAO,GACL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAO,QAAA,IAAI,EAAC,MAAZ;AACA,QAAA,SAAS,EAAEtB,MAAM,CAACuB,eADlB;AAEA,QAAA,KAAK,EAAE,KAAKpB,KAAL,CAAWM,KAFlB;AAGA,QAAA,IAAI,EAAC,OAHL;AAIA,QAAA,QAAQ,EAAE,KAAKN,KAAL,CAAWqB;AAJrB,SAKI,KAAKrB,KALT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SADF,CADF;AASD;;AAED,WACEmB,OADF;AAGD;;AA7D0C","sourcesContent":["import React, { Component } from 'react';\nimport styles from './Input.module.scss';\n\n\nexport default class Input extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      email: '',\n      firstrname: '',\n      lastname: ''\n    };\n\n    this.emailFilled = this.emailFilled.bind(this);\n    this.emailError = this.emailError.bind(this);\n  }\n\n\n  emailFilled = (e) => {\n    const value = e.target.value;\n    this.setState({email: value},\n                  () => console.log(this.state));\n  }\n\n  emailError() {\n    let fullField = this.state.email;\n    let errorStatus = '';\n    if (fullField.match(/^([\\w.%+-]+)@([\\w-]+\\.)+([\\w]{2,})$/i)) {\n      errorStatus = 'valid'\n    } else {\n      errorStatus = 'invalid'\n    }\n    console.log(errorStatus)\n  }\n\n\n\n  render() {\n    console.log('value', this.props.email)\n    const {format} = this.props;\n    let content = null;\n\n    if (format === 'text') {\n      content = <input type='text' \n                        className={styles.feedback__input}\n                        onChange={this.props.handleChange}\n                        value={this.state.firstrname}\n                        {...this.props}></input>\n    } \n\n    else if (format === 'email') {\n      content = \n        <div>\n          <input type='text'\n          className={styles.feedback__input}\n          value={this.props.email}\n          name='email'\n          onChange={this.props.handleChange}\n          {...this.props}></input>\n        </div>\n    }\n\n    return(\n      content\n    ) \n  }\n}\n"]},"metadata":{},"sourceType":"module"}