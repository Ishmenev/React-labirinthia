{"ast":null,"code":"var _jsxFileName = \"/Users/ishmenevev/Desktop/react-labirintiya/src/components/Options/Options.js\";\nimport React from 'react';\nimport { Row, Col } from 'reactstrap';\nimport styles from './Options.module.scss';\nimport Level from '../Level/Level';\nimport Button from '../UI/Button/Button'; // import news from '../News/news-data';\n\nconst levels = [{\n  id: 1,\n  type: 'narrative',\n  description: 'Вы оказались в загадочном лабиринте! Что делать? А вот хз!'\n}, {\n  id: 2,\n  type: 'creative',\n  description: 'Вы оказались в загадочном лабиринте! Что делать? А вот хз!'\n}, {\n  id: 3,\n  type: 'narrative',\n  description: 'Вы оказались в загадочном лабиринте! Что делать? А вот хз!'\n}, {\n  id: 4,\n  type: 'creative',\n  description: 'Вы оказались в загадочном лабиринте! Что делать? А вот хз!'\n}, {\n  id: 5,\n  type: 'creative',\n  description: 'Вы оказались в загадочном лабиринте! Что делать? А вот хз!'\n}, {\n  id: 6,\n  type: 'narrative',\n  description: 'Вы оказались в загадочном лабиринте! Что делать? А вот хз!'\n}];\n\nconst Options = ({\n  match: {\n    params\n  }\n}) => {\n  const visibleLevels = levels.filter(item => {\n    return item.type === params.filter ? !item.type === 'all' : item;\n  });\n\n  const showLevels = () => {\n    document.querySelector('.options__btn').addEventListener('click', () => {\n      console.log('done well');\n    });\n  };\n\n  return React.createElement(\"div\", {\n    className: styles.options,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, React.createElement(\"ul\", {\n    className: styles.options__list,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, React.createElement(Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, visibleLevels.map(item => React.createElement(Col, {\n    md: 6,\n    lg: 5,\n    xl: 4,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, React.createElement(\"li\", {\n    className: styles.options__item,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, React.createElement(Level, {\n    description: item.description,\n    number: item.id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, item.id)))))), React.createElement(\"div\", {\n    className: styles.options__button,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, React.createElement(Button, {\n    className: styles.options__btn,\n    onclick: showLevels(),\n    domType: 'button',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, \"\\u0415\\u0449\\u0435 \\u0443\\u0440\\u043E\\u0432\\u043D\\u0438\")));\n};\n\nexport default Options;","map":{"version":3,"sources":["/Users/ishmenevev/Desktop/react-labirintiya/src/components/Options/Options.js"],"names":["React","Row","Col","styles","Level","Button","levels","id","type","description","Options","match","params","visibleLevels","filter","item","showLevels","document","querySelector","addEventListener","console","log","options","options__list","map","options__item","options__button","options__btn"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Row, Col } from 'reactstrap';\nimport styles from './Options.module.scss';\nimport Level from '../Level/Level';\nimport Button from '../UI/Button/Button';\n// import news from '../News/news-data';\n\nconst levels =  [\n  {id: 1, type: 'narrative', description: 'Вы оказались в загадочном лабиринте! Что делать? А вот хз!'},\n  {id: 2, type: 'creative', description: 'Вы оказались в загадочном лабиринте! Что делать? А вот хз!'},\n  {id: 3, type: 'narrative', description: 'Вы оказались в загадочном лабиринте! Что делать? А вот хз!'},\n  {id: 4, type: 'creative', description: 'Вы оказались в загадочном лабиринте! Что делать? А вот хз!'},\n  {id: 5, type: 'creative', description: 'Вы оказались в загадочном лабиринте! Что делать? А вот хз!'},\n  {id: 6, type: 'narrative', description: 'Вы оказались в загадочном лабиринте! Что делать? А вот хз!'}\n]\n\n\nconst Options = ({match: {params}}) => {\n\n  const visibleLevels = levels.filter(item => {\n    return(item.type === params.filter ? !item.type === 'all' : item)\n  })\n\n  const showLevels = () => {\n    document.querySelector('.options__btn').addEventListener('click', () => {\n      console.log('done well')\n    })\n  }\n\n  return (\n    <div className={styles.options}>\n      <ul className={styles.options__list}>\n        <Row>\n          {visibleLevels.map((item) => (\n            <Col md={6} lg={5} xl={4}>\n              <li className={styles.options__item}>\n                <Level description={item.description}\n                  number={item.id}>\n                  {item.id}\n                </Level>\n              </li>\n            </Col>\n              ))}                \n        </Row>\n      </ul>\n      <div className={styles.options__button}>\n        <Button className={styles.options__btn} onclick={showLevels()} domType={'button'}>Еще уровни</Button>\n      </div>\n    </div>\n  )\n\n}\n\nexport default Options;\n\n"]},"metadata":{},"sourceType":"module"}